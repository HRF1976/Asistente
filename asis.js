// ley 24241
let coeficienteMovilidad = [1, 1, 1, 1, 1, 1, 1, 1, 1.1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.11, 1, 1, 1, 1, 1, 1, 1.13, 1, 1, 1, 1, 1, 1, 1, 1.125, 1, 1, 1, 1, 1, 1.075, 1, 1, 1, 1.075, 1, 1, 1, 1, 1, 1, 1, 1.1169, 1, 1, 1, 1, 1, 1.0734, 1, 1, 1, 1, 1, 1.0821, 1, 1, 1, 1, 1, 1.169, 1, 1, 1, 1, 1, 1.1733, 1, 1, 1, 1, 1, 1.1682, 1, 1, 1, 1, 1, 1.1762, 1, 1, 1, 1, 1, 1.1142, 1, 1, 1, 1, 1, 1.1518, 1, 1, 1, 1, 1, 1.1441, 1, 1, 1, 1, 1, 1.1131, 1, 1, 1, 1, 1, 1.1721, 1, 1, 1, 1, 1, 1.1826, 1, 1, 1, 1, 1, 1.1249, 1, 1, 1, 1, 1, 1.1535, 1, 1, 1, 1, 1, 1.1416, 1, 1, 1, 1, 1, 1.1296, 1, 1, 1, 1, 1, 1.1332, 1, 1, 1, 1, 1, 1.0571, 1, 1, 1.0569, 1, 1, 1.0668, 1, 1, 1.0778, 1, 1, 1.1183, 1, 1, 1.1074, 1, 1, 1.1222, 1, 1, 1.0874, 1, 1, 1.023, 1, 1, 1.0612, 1, 1, 1.075, 1, 1, 1.05, 1, 1, 1.0807, 1, 1, 1.1212, 1, 1, 1.1239, 1, 1, 1.1211, 1, 1, 1.1228, 1, 1, 1.15, 1, 1, 1.1553, 1, 1]

let coefActualiz=[ 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.47033513292447E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 1.72497417829127E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.32460805931633E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.60388959294445E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 2.98995524237154E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 3.05566854440168E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.01672558659254E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 4.09065305137645E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 6.15240790257221E-11, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.04812716738079E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.25265981994961E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.49004912353351E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 1.90568575887417E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 2.34021496854849E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 3.20188064141875E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 4.36007758970004E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 5.86409078991495E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 7.60549329371376E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.21416275376797E-10, 8.78915414653172E-10, 8.78915414653172E-10, 8.78915414653172E-10, 8.78915414653172E-10, 8.78915414653172E-10, 8.78915414653172E-10, 9.40439493678894E-10, 9.40439493678894E-10, 9.45860841096381E-10, 9.45860841096381E-10, 1.03145241699064E-09, 1.03145241699064E-09, 1.03145241699064E-09, 1.26645961337595E-09, 1.26645961337595E-09, 1.26645961337595E-09, 1.26645961337595E-09, 1.26645961337595E-09, 1.31443032385795E-09, 1.31443032385795E-09, 1.31443032385795E-09, 1.31443032385795E-09, 1.51157022994838E-09, 1.51157022994838E-09, 1.51157022994838E-09, 1.51157022994838E-09, 1.73836326357991E-09, 1.73836326357991E-09, 1.73836326357991E-09, 1.73836326357991E-09, 1.73836326357991E-09, 1.92556403273829E-09, 1.92556403273829E-09, 1.92556403273829E-09, 2.62803923144052E-09, 2.62803923144052E-09, 2.68364911328353E-09, 2.68479909606906E-09, 2.73893042861639E-09, 3.23284803500046E-09, 3.23826938241795E-09, 3.23826938241795E-09, 3.24007649822377E-09, 3.240569347989E-09, 3.240569347989E-09, 3.240569347989E-09, 3.240569347989E-09, 3.27285100761131E-09, 3.3425892493908E-09, 3.95068371805224E-09, 4.02181836749987E-09, 4.06223204824841E-09, 4.11488483150006E-09, 4.1962871843899E-09, 4.24861140113141E-09, 4.29140718907854E-09, 5.01532135256811E-09, 5.21550049887743E-09, 5.32885594487943E-09, 5.33863079855641E-09, 6.1264511482703E-09, 6.47900301366202E-09, 6.79319473899365E-09, 1.36369887205505E-08, 1.37382693473045E-08, 1.57839244395028E-08, 1.61957825599768E-08, 1.65047993627735E-08, 1.91281565214444E-08, 1.92415941090739E-08, 2.62774352158139E-08, 2.72548384418847E-08, 3.35314444852939E-08, 3.53379031581026E-08, 3.65614848419038E-08, 4.12130009261076E-08, 4.15394317539423E-08, 4.22759957280727E-08, 4.75869447981489E-08, 4.75869447981489E-08, 5.40960116474897E-08, 5.40960116474897E-08, 5.77886885134461E-08, 5.77886885134461E-08, 6.93184980627725E-08, 7.7188240972275E-08, 7.96178260315845E-08, 8.03055157373299E-08, 9.34934361801319E-08, 1.00494038528658E-07, 1.05628875949294E-07, 1.1554074186101E-07, 1.2204216953899E-07, 1.27815822396986E-07, 1.69747973272186E-07, 1.76844599183304E-07, 1.80272451442079E-07, 1.93319006143888E-07, 2.34826977654484E-07, 2.40550031269917E-07, 2.50908665493811E-07, 2.81375570138929E-07, 3.16816725322846E-07, 3.35935353415496E-07, 3.56090773130927E-07, 4.42101846317024E-07, 4.6907107831996E-07, 4.81192554012441E-07, 5.00853891838232E-07, 5.42193062304238E-07, 6.36775203615754E-07, 6.80803526684088E-07, 7.35295214551426E-07, 7.87114753133337E-07, 8.93511653300108E-07, 9.99128290146898E-07, 1.04864227752708E-06, 1.09354844816891E-06, 1.28525649271353E-06, 1.3221689687299E-06, 1.36183746063342E-06, 1.41602892085211E-06, 1.55859475102278E-06, 1.59957216976111E-06, 1.70705112158743E-06, 1.81229779254379E-06, 1.92992074252126E-06, 2.01564029507122E-06, 2.07171156643611E-06, 2.14420483840322E-06, 2.36307407993433E-06, 2.41588153587063E-06, 2.4866225626391E-06, 2.57500728243616E-06, 2.72152453559953E-06, 2.94280241607493E-06, 3.20990973908568E-06, 3.36010274793973E-06, 3.61127147382633E-06, 4.04145432356275E-06, 4.14481600845038E-06, 4.25136988126738E-06, 4.75652265518279E-06, 4.86270836922516E-06, 4.96763945204852E-06, 5.07012345364591E-06, 5.18479645135361E-06, 5.44128204050747E-06, 6.37307555289663E-06, 6.68941470679697E-06, 9.06763315645879E-06, 1.10924415250044E-05, 1.23994661240068E-05, 1.38476899629225E-05, 1.59019685296047E-05, 1.75073198557128E-05, 1.91970754826308E-05, 2.21177479585476E-05, 2.56697804512846E-05, 2.99663881089442E-05, 3.5622634953001E-05, 4.07191247191038E-05, 5.08247283949816E-05, 6.11921352625551E-05, 7.274638326034E-05, 9.01999300852849E-05, 1.09119574849439E-04, 1.23239494240841E-04, 1.51165169226466E-04, 1.84222186917183E-04, 2.08377895761677E-04, 2.4529214735147E-04, 2.94964941686562E-04, 3.70905324017017E-04, 4.37734954915036E-04, 5.69072894973993E-04, 6.32289641711613E-04, 6.57754366596728E-04, 9.66245807068515E-04, 1.11840582853842E-03, 1.37841131596961E-03, 1.75057329542177E-03, 2.27667555808022E-03, 2.74020685529485E-03, 2.81002104275891E-03, 2.8449281364088E-03, 2.8449281364088E-03, 2.87983523014084E-03, 2.89728877696578E-03, 2.91474232387287E-03, 3.22890616713258E-03, 3.24635971395753E-03, 3.31617390133945E-03, 3.36853454189642E-03, 3.71760547888817E-03, 3.82232676000212E-03, 4.24121188437579E-03, 4.50301508716067E-03, 4.79972538359544E-03, 5.20115696106202E-03, 5.22716274586569E-03, 5.25329855963362E-03, 5.9167523819526E-03, 6.02147366306655E-03, 6.26582331894435E-03, 6.49271942799719E-03, 6.75452263069993E-03, 7.71446770738616E-03, 8.23807411287378E-03, 9.05839081479617E-03, 1.02626855474423E-02, 1.17815630084385E-02, 1.17815630084385E-02, 1.17815630084385E-02, 1.62667056636839E-02, 0.017610628771094, 2.00890324236861E-02, 2.33353921377257E-02, 0.026930822788675, 3.17654552660025E-02, 3.79789179443898E-02, 4.84335925073173E-02, 5.39314597648962E-02, 5.95864089440639E-02, 6.25657293912384E-02, 6.50683585668156E-02, 8.29218010818718E-02, 9.04791868676692E-02, 0.101213118180124, 0.132769130883981, 0.213904346767702, 0.43609432158093, 1.18471185304862, 1.48918897783765, 1.69707975914383, 2.03649571097256, 2.03649571097256, 2.30124015339899, 4.99934159892279, 7.88977113202365, 13.9554022686214, 18.548704553638, 21.6915647348228, 24.8700650586742, 26.9534076783617, 30.9040529148338, 35.0315025808912, 39.0403030354657, 40.992318187239, 43.041934096601, 45.4452311228172, 52.5215098897338, 58.6629592338455, 62.9816299591857, 65.6826710554229, 66.8954656653523, 68.891592911433, 70.0050768397888, 70.7880953120968, 72.6364433770029, 72.999625593888, 73.3646237218574, 75.1445006057255, 76.7397547877675, 81.5150452057836, 82.064831931542, 83.3773386546222, 84.8382005259228, 86.4840699938282, 87.1001801976145, 88.4039601472705, 89.6920319047618, 90.0795006448202, 90.4425344192892, 92.339734961827, 92.6870605441313, 93.1513248903279, 93.2857172010688, 93.952442690719, 94.4254338103395, 95.301601862183, 95.6192564148439, 96.2091862983558, 96.4847268137212, 97.3946273961763, 98.4906206401291, 98.5399711801939, 98.5749278127406, 98.680106151255, 98.9467018812334, 99.1908842409316, 99.3822203973107, 99.9139724665145, 101.984497596898, 103.696421022404, 104.011625068728, 104.717408042019, 106.990074897762, 106.990074897762, 106.990074897762, 106.990074897762, 104.428387630382, 105.742544685935, 108.486881404218, 105.041814088131, 104.863759591968, 105.073978771309, 105.279602995911, 105.845931167578, 107.85277765014, 107.77351468088, 107.231310021596, 107.077379037816, 106.158388089877, 106.748839773928, 108.090566557919, 106.851077516886, 107.600055139457, 107.895280981482, 107.995221247071, 105.902219363139, 107.988328814961, 106.084868814042, 106.095207462207, 105.623075862703, 104.767265542434, 105.06249138446, 106.684510407573, 104.069981160686, 103.233699398061, 104.566236272573, 104.882139410927, 103.335937141019, 105.175067775582, 104.820107521941, 104.320406193999, 104.625970684189, 103.370399301567, 102.969489500528, 105.727611083031, 103.196939760143, 102.089555667877, 102.700684648256, 102.490465468915, 102.373294123053, 103.978082065892, 102.326195836971, 103.085512107706, 103.009695354501, 101.655332444975, 101.526673712264, 103.224509488582, 102.034416211, 101.479575426182, 101.794329825851, 102.042457381795, 101.917244865138, 102.483573036806, 102.04130864311, 102.6363552819, 102.137802692643, 100.134402426136, 100.928180857419, 103.733400726003, 101.358957864265, 101.296925975279, 101.450856959059, 101.083260579883, 100.848917888159, 101.643845058126, 101.979276754124, 102.49850663971, 102.481275559436, 101.65418370629, 101.384230115333, 102.133207737904, 101.237191563663, 101.046500941966, 100.675458346735, 101.118871479116, 100.609980241695, 100, 100.603087809585, 101.895418830125, 101.363552819005, 101.333685613197, 101.332536874512, 100.45949547397, 104.163028994164, 101.697835776318, 102.452557092313, 103.47608326058, 102.771906446722, 103.465744612416, 101.322198226347, 102.306667279327, 102.477829343381, 102.228553048753, 101.919542342508, 103.825299820797, 105.564490189772, 108.135367366631, 111.653953958554, 115.852593851951, 117.212700454901, 119.552681156091, 122.341818683086, 125.318200615724, 126.639250103387, 126.249827689197, 125.048247024767, 126.4324771401, 124.958645407343, 124.640444791619, 124.481918853099, 125.032164683178, 125.259614942793, 126.670266047879, 126.570325782291, 126.633506409962, 127.928134907871, 132.801084409319, 134.469052979828, 137.456922299315, 141.448789229426, 146.805357717227, 149.856407664385, 155.417451638101, 156.967100124064, 157.55410559206, 159.459863070349, 161.715985847539, 165.607912512062, 168.297109773469, 172.579607590865, 175.506593760052, 178.609336948031, 181.885539677434, 183.39153609337, 187.740660754492, 188.593024858705, 192.170197123558, 194.580250884529, 198.546845563571, 202.697238432202, 208.54087212241, 210.227220511878, 211.10485686716, 217.874373937417, 223.028764416671, 223.605431236502, 231.934935440886, 232.073932821762, 234.625281440978, 235.522446353904, 244.793916279925, 251.634655148647, 268.35799292377, 273.79152690346, 275.711069245968, 275.711069245968, 275.711069245968, 275.711069245968, 275.711069245968, 275.711069245968, 275.711069245968, 275.711069245968, 275.711069245968, 307.941693240822, 307.941693240822, 307.941693240822, 307.941693240822, 307.941693240822, 307.941693240822, 330.544613524698, 330.544613524698, 330.544613524698, 330.544613524698, 330.544613524698, 330.544613524698, 357.682326295076, 357.682326295076, 357.682326295076, 357.682326295076, 357.682326295076, 357.682326295076, 418.130639438944, 418.130639438944, 418.130639438944, 418.130639438944, 418.130639438944, 418.130639438944, 490.592679253713, 490.592679253713, 490.592679253713, 490.592679253713, 490.592679253713, 490.592679253713, 573.110367904187, 573.110367904187, 573.110367904187, 573.110367904187, 573.110367904187, 573.110367904187, 674.092414728905, 674.092414728905, 674.092414728905, 674.092414728905, 674.092414728905, 674.092414728905, 751.073768490946, 751.073768490946, 751.073768490946, 751.073768490946, 751.073768490946, 751.073768490946, 865.086766547871, 865.086766547871, 865.086766547871, 865.086766547871, 865.086766547871, 865.086766547871, 989.745769607419, 989.745769607419, 989.745769607419, 989.745769607419, 989.745769607419, 989.745769607419, 1101.68601615002, 1101.68601615002, 1101.68601615002, 1101.68601615002, 1101.68601615002, 1101.68601615002, 1291.28617952944, 1291.28617952944, 1291.28617952944, 1291.28617952944, 1291.28617952944, 1291.28617952944, 1527.07503591151, 1527.07503591151, 1527.07503591151, 1527.07503591151, 1527.07503591151, 1527.07503591151, 1717.80670789686, 1717.80670789686, 1717.80670789686, 1717.80670789686, 1717.80670789686, 1717.80670789686, 1981.49003755903, 1981.49003755903, 1981.49003755903, 1981.49003755903, 1981.49003755903, 1981.49003755903, 2262.06902687739, 2262.06902687739, 2262.06902687739, 2262.06902687739, 2262.06902687739, 2262.06902687739, 2555.2331727607, 2555.2331727607, 2555.2331727607, 2555.2331727607, 2555.2331727607, 2555.2331727607, 2895.59023137243, 2895.59023137243, 2895.59023137243, 2895.59023137243, 2895.59023137243, 2895.59023137243, 3101.17731299125, 3101.17731299125, 3101.17731299125, 3244.91690334732, 3244.91690334732, 3244.91690334732, 3463.3990573515, 3463.3990573515, 3463.3990573515, 3651.64466007167, 3651.64466007167, 3651.64466007167, 3889.19429816654, 3889.19429816654, 3889.19429816654, 4236.62224105598, 4236.62224105598, 4236.62224105598, 4797.33581624207, 4797.33581624207, 4797.33581624207, 5130.41780604148, 5130.41780604148, 5130.41780604148, 5611.70429884168, 5611.70429884168, 5611.70429884168, 6116.1937792377, 6116.1937792377, 6116.1937792377, 7016.64414908798, 7016.64414908798, 7016.64414908798, 7200.35698334816, 7200.35698334816, 7200.35698334816, 8250.0185897494, 8250.0185897494, 8250.0185897494, 9352.89149274276, 9352.89149274276, 9352.89149274276, 10426.7948975845, 10426.7948975845, 10426.7948975845, 11616.6330471691, 11616.6330471691, 11616.6330471691, 12656.9441222263, 12656.9441222263, 12656.9441222263, 14955.4772037543, 14955.4772037543, 14955.4772037543]

let nPerTotal=['19500101','19500201','19500301','19500401','19500501','19500601','19500701','19500801','19500901','19501001','19501101','19501201','19510101','19510201','19510301','19510401','19510501','19510601','19510701','19510801','19510901','19511001','19511101','19511201','19520101','19520201','19520301','19520401','19520501','19520601','19520701','19520801','19520901','19521001','19521101','19521201','19530101','19530201','19530301','19530401','19530501','19530601','19530701','19530801','19530901','19531001','19531101','19531201','19540101','19540201','19540301','19540401','19540501','19540601','19540701','19540801','19540901','19541001','19541101','19541201','19550101','19550201','19550301','19550401','19550501','19550601','19550701','19550801','19550901','19551001','19551101','19551201','19560101','19560201','19560301','19560401','19560501','19560601','19560701','19560801','19560901','19561001','19561101','19561201','19570101','19570201','19570301','19570401','19570501','19570601','19570701','19570801','19570901','19571001','19571101','19571201','19580101','19580201','19580301','19580401','19580501','19580601','19580701','19580801','19580901','19581001','19581101','19581201','19590101','19590201','19590301','19590401','19590501','19590601','19590701','19590801','19590901','19591001','19591101','19591201','19600101','19600201','19600301','19600401','19600501','19600601','19600701','19600801','19600901','19601001','19601101','19601201','19610101','19610201','19610301','19610401','19610501','19610601','19610701','19610801','19610901','19611001','19611101','19611201','19620101','19620201','19620301','19620401','19620501','19620601','19620701','19620801','19620901','19621001','19621101','19621201','19630101','19630201','19630301','19630401','19630501','19630601','19630701','19630801','19630901','19631001','19631101','19631201','19640101','19640201','19640301','19640401','19640501','19640601','19640701','19640801','19640901','19641001','19641101','19641201','19650101','19650201','19650301','19650401','19650501','19650601','19650701','19650801','19650901','19651001','19651101','19651201','19660101','19660201','19660301','19660401','19660501','19660601','19660701','19660801','19660901','19661001','19661101','19661201','19670101','19670201','19670301','19670401','19670501','19670601','19670701','19670801','19670901','19671001','19671101','19671201','19680101','19680201','19680301','19680401','19680501','19680601','19680701','19680801','19680901','19681001','19681101','19681201','19690101','19690201','19690301','19690401','19690501','19690601','19690701','19690801','19690901','19691001','19691101','19691201','19700101','19700201','19700301','19700401','19700501','19700601','19700701','19700801','19700901','19701001','19701101','19701201','19710101','19710201','19710301','19710401','19710501','19710601','19710701','19710801','19710901','19711001','19711101','19711201','19720101','19720201','19720301','19720401','19720501','19720601','19720701','19720801','19720901','19721001','19721101','19721201','19730101','19730201','19730301','19730401','19730501','19730601','19730701','19730801','19730901','19731001','19731101','19731201','19740101','19740201','19740301','19740401','19740501','19740601','19740701','19740801','19740901','19741001','19741101','19741201','19750101','19750201','19750301','19750401','19750501','19750601','19750701','19750801','19750901','19751001','19751101','19751201','19760101','19760201','19760301','19760401','19760501','19760601','19760701','19760801','19760901','19761001','19761101','19761201','19770101','19770201','19770301','19770401','19770501','19770601','19770701','19770801','19770901','19771001','19771101','19771201','19780101','19780201','19780301','19780401','19780501','19780601','19780701','19780801','19780901','19781001','19781101','19781201','19790101','19790201','19790301','19790401','19790501','19790601','19790701','19790801','19790901','19791001','19791101','19791201','19800101','19800201','19800301','19800401','19800501','19800601','19800701','19800801','19800901','19801001','19801101','19801201','19810101','19810201','19810301','19810401','19810501','19810601','19810701','19810801','19810901','19811001','19811101','19811201','19820101','19820201','19820301','19820401','19820501','19820601','19820701','19820801','19820901','19821001','19821101','19821201','19830101','19830201','19830301','19830401','19830501','19830601','19830701','19830801','19830901','19831001','19831101','19831201','19840101','19840201','19840301','19840401','19840501','19840601','19840701','19840801','19840901','19841001','19841101','19841201','19850101','19850201','19850301','19850401','19850501','19850601','19850701','19850801','19850901','19851001','19851101','19851201','19860101','19860201','19860301','19860401','19860501','19860601','19860701','19860801','19860901','19861001','19861101','19861201','19870101','19870201','19870301','19870401','19870501','19870601','19870701','19870801','19870901','19871001','19871101','19871201','19880101','19880201','19880301','19880401','19880501','19880601','19880701','19880801','19880901','19881001','19881101','19881201','19890101','19890201','19890301','19890401','19890501','19890601','19890701','19890801','19890901','19891001','19891101','19891201','19900101','19900201','19900301','19900401','19900501','19900601','19900701','19900801','19900901','19901001','19901101','19901201','19910101','19910201','19910301','19910401','19910501','19910601','19910701','19910801','19910901','19911001','19911101','19911201','19920101','19920201','19920301','19920401','19920501','19920601','19920701','19920801','19920901','19921001','19921101','19921201','19930101','19930201','19930301','19930401','19930501','19930601','19930701','19930801','19930901','19931001','19931101','19931201','19940101','19940201','19940301','19940401','19940501','19940601','19940701','19940801','19940901','19941001','19941101','19941201','19950101','19950201','19950301','19950401','19950501','19950601','19950701','19950801','19950901','19951001','19951101','19951201','19960101','19960201','19960301','19960401','19960501','19960601','19960701','19960801','19960901','19961001','19961101','19961201','19970101','19970201','19970301','19970401','19970501','19970601','19970701','19970801','19970901','19971001','19971101','19971201','19980101','19980201','19980301','19980401','19980501','19980601','19980701','19980801','19980901','19981001','19981101','19981201','19990101','19990201','19990301','19990401','19990501','19990601','19990701','19990801','19990901','19991001','19991101','19991201','20000101','20000201','20000301','20000401','20000501','20000601','20000701','20000801','20000901','20001001','20001101','20001201','20010101','20010201','20010301','20010401','20010501','20010601','20010701','20010801','20010901','20011001','20011101','20011201','20020101','20020201','20020301','20020401','20020501','20020601','20020701','20020801','20020901','20021001','20021101','20021201','20030101','20030201','20030301','20030401','20030501','20030601','20030701','20030801','20030901','20031001','20031101','20031201','20040101','20040201','20040301','20040401','20040501','20040601','20040701','20040801','20040901','20041001','20041101','20041201','20050101','20050201','20050301','20050401','20050501','20050601','20050701','20050801','20050901','20051001','20051101','20051201','20060101','20060201','20060301','20060401','20060501','20060601','20060701','20060801','20060901','20061001','20061101','20061201','20070101','20070201','20070301','20070401','20070501','20070601','20070701','20070801','20070901','20071001','20071101','20071201','20080101','20080201','20080301','20080401','20080501','20080601','20080701','20080801','20080901','20081001','20081101','20081201','20090101','20090201','20090301','20090401','20090501','20090601','20090701','20090801','20090901','20091001','20091101','20091201','20100101','20100201','20100301','20100401','20100501','20100601','20100701','20100801','20100901','20101001','20101101','20101201','20110101','20110201','20110301','20110401','20110501','20110601','20110701','20110801','20110901','20111001','20111101','20111201','20120101','20120201','20120301','20120401','20120501','20120601','20120701','20120801','20120901','20121001','20121101','20121201','20130101','20130201','20130301','20130401','20130501','20130601','20130701','20130801','20130901','20131001','20131101','20131201','20140101','20140201','20140301','20140401','20140501','20140601','20140701','20140801','20140901','20141001','20141101','20141201','20150101','20150201','20150301','20150401','20150501','20150601','20150701','20150801','20150901','20151001','20151101','20151201','20160101','20160201','20160301','20160401','20160501','20160601','20160701','20160801','20160901','20161001','20161101','20161201','20170101','20170201','20170301','20170401','20170501','20170601','20170701','20170801','20170901','20171001','20171101','20171201','20180101','20180201','20180301','20180401','20180501','20180601','20180701','20180801','20180901','20181001','20181101','20181201','20190101','20190201','20190301','20190401','20190501','20190601','20190701','20190801','20190901','20191001','20191101','20191201','20200101','20200201','20200301','20200401','20200501','20200601','20200701','20200801','20200901','20201001','20201101','20201201','20210101','20210201','20210301','20210401','20210501','20210601','20210701','20210801','20210901','20211001','20211101','20211201','20220101','20220201','20220301','20220401','20220501','20220601','20220701','20220801','20220901','20221001','20221101']

let TopesRemu=[3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3660,3780,3780,3780,3780,3780,3780,3780,3780,3780,3780,3780,3780,3780,4320,4320,4320,4320,4320,4320,4500,4500,4500,4500,4500,4500,4560,4560,4560,4560,4560,4560,4560,4560,4560,4560,4560,4560,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,4800,6000,6000,6000,6000,6000,6750,6750,6750,6750,6750,6750,7256,7256,7256,7256,7800,7800,7800,7800,7800,7800,7800,7800,8711.82,8711.82,8711.82,8711.82,8711.82,8711.82,9351.3,9351.3,9351.3,9351.3,9351.3,9351.3,10119.08,10119.08,10119.08,10119.08,10119.08,10119.08,11829.21,11829.21,11829.21,11829.21,11829.21,11829.21,13879.25,13879.25,13879.25,13879.25,13879.25,13879.25,16213.72,16213.72,16213.72,16213.72,16213.72,16213.72,19070.55,19070.55,19070.55,19070.55,19070.55,19070.55,21248.45,21248.45,21248.45,21248.45,21248.45,21248.45,24473.92,24473.92,24473.92,24473.92,24473.92,24473.92,28000.65,28000.65,28000.65,28000.65,28000.65,28000.65,31167.56,31167.56,31167.56,31167.56,31167.56,31167.56,36531.48,36531.48,36531.48,36531.48,36531.48,36531.48,43202.17,43202.17,43202.17,43202.17,43202.17,43202.17,48598.08,48598.08,48598.08,48598.08,48598.08,48598.08,56057.93,56057.93,56057.93,56057.93,56057.93,56057.93,63995.73,63995.73,63995.73,63995.73,63995.73,63995.73,72289.62,72289.62,72289.62,72289.62,72289.62,72289.62,81918.55,81918.55,81918.55,81918.55,81918.55,81918.55,86596.1,86596.1,86596.1,91523.42,91523.42,91523.42,97637.14,97637.14,97637.14,105233.31,105233.31,105233.31,117682.41,117682.41,117682.41,130321.52,130321.52,130321.52,146246.86,146246.86,146246.86,159028.8,159028.8,159028.8,173945.7,173945.7,173945.7,184591.18,184591.18,184591.18,198435.52,198435.52,198435.52,208357.3,208357.3,208357.3,225171.69,225171.69,225171.69,252462.5,252462.5,252462.5,283742.6,283742.6,283742.6,318103.83,318103.83,318103.83,357166.98,357166.98,357166.98,410742.03,410742.03,410742.03]


let nPer = ['20040101', '20040201', '20040301', '20040401', '20040501', '20040601', '20040701', '20040801', '20040901', '20041001', '20041101', '20041201', '20050101', '20050201', '20050301', '20050401', '20050501', '20050601', '20050701', '20050801', '20050901', '20051001', '20051101', '20051201', '20060101', '20060201', '20060301', '20060401', '20060501', '20060601', '20060701', '20060801', '20060901', '20061001', '20061101', '20061201', '20070101', '20070201', '20070301', '20070401', '20070501', '20070601', '20070701', '20070801', '20070901', '20071001', '20071101', '20071201', '20080101', '20080201', '20080301', '20080401', '20080501', '20080601', '20080701', '20080801', '20080901', '20081001', '20081101', '20081201', '20090101', '20090201', '20090301', '20090401', '20090501', '20090601', '20090701', '20090801', '20090901', '20091001', '20091101', '20091201', '20100101', '20100201', '20100301', '20100401', '20100501', '20100601', '20100701', '20100801', '20100901', '20101001', '20101101', '20101201', '20110101', '20110201', '20110301', '20110401', '20110501', '20110601', '20110701', '20110801', '20110901', '20111001', '20111101', '20111201', '20120101', '20120201', '20120301', '20120401', '20120501', '20120601', '20120701', '20120801', '20120901', '20121001', '20121101', '20121201', '20130101', '20130201', '20130301', '20130401', '20130501', '20130601', '20130701', '20130801', '20130901', '20131001', '20131101', '20131201', '20140101', '20140201', '20140301', '20140401', '20140501', '20140601', '20140701', '20140801', '20140901', '20141001', '20141101', '20141201', '20150101', '20150201', '20150301', '20150401', '20150501', '20150601', '20150701', '20150801', '20150901', '20151001', '20151101', '20151201', '20160101', '20160201', '20160301', '20160401', '20160501', '20160601', '20160701', '20160801', '20160901', '20161001', '20161101', '20161201', '20170101', '20170201', '20170301', '20170401', '20170501', '20170601', '20170701', '20170801', '20170901', '20171001', '20171101', '20171201', '20180101', '20180201', '20180301', '20180401', '20180501', '20180601', '20180701', '20180801', '20180901', '20181001', '20181101', '20181201', '20190101', '20190201', '20190301', '20190401', '20190501', '20190601', '20190701', '20190801', '20190901', '20191001', '20191101', '20191201', '20200101', '20200201', '20200301', '20200401', '20200501', '20200601', '20200701', '20200801', '20200901', '20201001', '20201101', '20201201', '20210101', '20210201', '20210301', '20210401', '20210501', '20210601', '20210701', '20210801', '20210901', '20211001', '20211101', '20211201', '20220101', '20220201', '20220301', '20220401', '20220501', '20220601', '20220701', '20220801','20220901','20221001','20221101']

let coeficientesMagistrados = [1, 1, 1, 1.1, 1, 1, 1, 1, 1, 1, 1.05, 1, 1, 1.1, 1, 1, 1, 1.1, 1, 1.1, 1, 1, 1, 1, 1.1, 1, 1.075, 1.075, 1, 1, 1.1, 1, 1.1, 1.1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.1, 1.1, 1.075, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

let nPerMagistrados = ['20170301', '20170401', '20170501', '20170601', '20170701', '20170801', '20170901', '20171001', '20171101', '20171201', '20180101', '20180201', '20180301', '20180401', '20180501', '20180601', '20180701', '20180801', '20180901', '20181001', '20181101', '20181201', '20190101', '20190201', '20190301', '20190401', '20190501', '20190601', '20190701', '20190801', '20190901', '20191001', '20191101', '20191201', '20200101', '20200201', '20200301', '20200401', '20200501', '20200601', '20200701', '20200801', '20200901', '20201001', '20201101', '20201201', '20210101', '20210201', '20210301', '20210401', '20210501', '20210601', '20210701', '20210801']

let tablaCombinadaMagis = { 'UNO-101': '17974.5', 'UNO-110': '26961.58', 'UNO-108': '53634.01', 'UNO-120': '4853.82', 'UNO-107': '4853.82', 'UNO-157': '0', 'UNO-105': '5171.14', 'UNO-115': '5171.14', 'UNO-TOT': '108595.05', 'DOS-101': '16362.28', 'DOS-110': '24543.16', 'DOS-108': '35432.41', 'DOS-120': '4853.82', 'DOS-107': '4853.82', 'DOS-157': '0', 'DOS-105': '4059.54', 'DOS-115': '4059.54', 'DOS-TOT': '85251.21', 'TRES-101': '19415.08', 'TRES-110': '27909.24', 'TRES-108': '55817.78', 'TRES-120': '4853.82', 'TRES-107': '4853.82', 'TRES-157': '0', 'TRES-105': '5399.82', 'TRES-115': '5399.82', 'TRES-TOT': '113395.74', 'CUATRO-101': '14366.85', 'CUATRO-110': '21550.12', 'CUATRO-108': '26914.14', 'CUATRO-120': '4853.82', 'CUATRO-107': '4853.82', 'CUATRO-157': '0', 'CUATRO-105': '3384.29', 'CUATRO-115': '3384.29', 'CUATRO-TOT': '71069.22', 'CINCO-101': '13069.69', 'CINCO-110': '19604.73', 'CINCO-108': '25263.73', 'CINCO-120': '4853.82', 'CINCO-107': '4853.82', 'CINCO-157': '0', 'CINCO-105': '3139.62', 'CINCO-115': '3139.62', 'CINCO-TOT': '65931.59', 'SEIS-101': '12670.91', 'SEIS-110': '19006.13', 'SEIS-108': '22206.16', 'SEIS-120': '4853.82', 'SEIS-107': '4853.82', 'SEIS-157': '0', 'SEIS-105': '2936.89', 'SEIS-115': '2936.89', 'SEIS-TOT': '61673.91', 'SIETE-101': '12471.16', 'SIETE-110': '18707.04', 'SIETE-108': '13590.43', 'SIETE-120': '4853.82', 'SIETE-107': '4853.82', 'SIETE-157': '3320.16', 'SIETE-105': '2647.12', 'SIETE-115': '2647.12', 'SIETE-TOT': '55589.73', 'OCHO-101': '12171.85', 'OCHO-110': '18257.9', 'OCHO-108': '13226.52', 'OCHO-120': '4853.82', 'OCHO-107': '4853.82', 'OCHO-157': '3320.16', 'OCHO-105': '2591.49', 'OCHO-115': '2591.49', 'OCHO-TOT': '54421.74', 'NUEVE-101': '10552.72', 'NUEVE-110': '15828.7', 'NUEVE-108': '11499.63', 'NUEVE-120': '7840.77', 'NUEVE-107': '7840.77', 'NUEVE-157': '3320.16', 'NUEVE-105': '2452.08', 'NUEVE-115': '2452.08', 'NUEVE-TOT': '51494.06', 'DIEZ-101': '8522.12', 'DIEZ-110': '12793.51', 'DIEZ-108': '10123.82', 'DIEZ-120': '7840.77', 'DIEZ-107': '7840.77', 'DIEZ-157': '3320.16', 'DIEZ-105': '2130', 'DIEZ-115': '2130', 'DIEZ-TOT': '44730.38', 'ONCE-101': '7105.05', 'ONCE-110': '10657.85', 'ONCE-108': '8440', 'ONCE-120': '7840.77', 'ONCE-107': '7840.77', 'ONCE-157': '2766.91', 'ONCE-105': '1840.51', 'ONCE-115': '1840.51', 'ONCE-TOT': '38651.09', 'DOCE-101': '6464.44', 'DOCE-110': '9696.74', 'DOCE-108': '5667.61', 'DOCE-120': '7840.77', 'DOCE-107': '7840.77', 'DOCE-157': '2766.91', 'DOCE-105': '1621.9', 'DOCE-115': '1621.9', 'DOCE-TOT': '34058.37', 'TRECE-101': '5684.13', 'TRECE-110': '8526.34', 'TRECE-108': '3984.05', 'TRECE-120': '7840.77', 'TRECE-107': '7840.77', 'TRECE-157': '2213.37', 'TRECE-105': '1412.47', 'TRECE-115': '1412.47', 'TRECE-TOT': '29661.13', 'CATORCE-101': '4591.68', 'CATORCE-110': '6887.43', 'CATORCE-108': '4702.68', 'CATORCE-120': '7840.77', 'CATORCE-107': '7840.77', 'CATORCE-157': '2213.37', 'CATORCE-105': '1311.78', 'CATORCE-115': '1311.78', 'CATORCE-TOT': '27547.71', 'QUINCE-101': '3745.56', 'QUINCE-110': '5618.35', 'QUINCE-108': '4127.68', 'QUINCE-120': '7840.77', 'QUINCE-107': '7840.77', 'QUINCE-157': '1660.21', 'QUINCE-105': '1149.63', 'QUINCE-115': '1149.63', 'QUINCE-TOT': '24142.2', 'DIECISEIS-101': '4591.68', 'DIECISEIS-110': '6887.43', 'DIECISEIS-108': '3675.76', 'DIECISEIS-120': '7840.77', 'DIECISEIS-107': '7840.77', 'DIECISEIS-157': '2213.37', 'DIECISEIS-105': '1260.51', 'DIECISEIS-115': '1260.51', 'DIECISEIS-TOT': '26469.52', 'DIECISIETE-101': '3745.56', 'DIECISIETE-110': '5618.35', 'DIECISIETE-108': '3265.04', 'DIECISIETE-120': '7840.77', 'DIECISIETE-107': '7840.77', 'DIECISIETE-157': '1660.21', 'DIECISIETE-105': '1106.48', 'DIECISIETE-115': '1106.48', 'DIECISIETE-TOT': '23236.41', 'DIECIOCHO-101': '19954.03', 'DIECIOCHO-110': '29930.96', 'DIECIOCHO-108': '70379.3', 'DIECIOCHO-120': '4853.83', 'DIECIOCHO-107': '4853.83', 'DIECIOCHO-157': '0', 'DIECIOCHO-105': '6255.94', 'DIECIOCHO-115': '6255.94', 'DIECIOCHO-TOT': '131374.07' }

let tablaMagis = {
    '01-02': 'UNO', '01-03': 'DOS', '01-06': 'TRES', '15-01': 'UNO', '15-03': 'DOS', '15-04': 'DOS', '15-07': 'CINCO', '15-10': 'CINCO', '15-11': 'SEIS', '15-12': 'SEIS', '25-04': 'SEIS', '30-02': 'CINCO', '30-03': 'SIETE', '30-04': 'SEIS', '30-05': 'SEIS', '30-07': 'NUEVE', '35-01': 'DOS', '40-01': 'CUATRO', '55-01': 'OCHO', '60-01': 'NUEVE', '63-90': 'DIEZ', '64-00': 'ONCE', '64-01': 'DOCE', '64-02': 'TRECE', '64-03': 'DIECISEIS', '64-04': 'DIECISIETE', '83-01': 'DIEZ', '84-00': 'ONCE', '84-01': 'DOCE', '84-02': 'TRECE', '84-03': 'CATORCE', '84-04': 'QUINCE', '03-02': 'UNO', '05-01': 'UNO', '05-02': 'UNO', '05-03': 'UNO', '05-06': 'UNO', '05-12': 'UNO', '06-35': 'UNO', '06-40': 'UNO', '15-02': 'UNO', '15-20': 'UNO', '15-21': 'UNO', '05-04': 'DOS', '05-07': 'DOS', '05-08': 'DOS', '06-95': 'DOS', '07-01': 'DOS', '10-03': 'DOS', '15-05': 'DOS', '15-06': 'DOS', '07-15': 'CUATRO', '45-03': 'CUATRO', '03-03': 'TRES', '05-09': 'CINCO', '07-27': 'CINCO', '15-08': 'CINCO', '15-17': 'CINCO', '30-08': 'CINCO', '40-02': 'CINCO', '25-05': 'SEIS', '30-09': 'SEIS', '30-10': 'SEIS', '84-10': 'SEIS', '55-03': 'DIEZ', '03-01': 'DIECIOCHO', '08-03': 'TRES', '07-05': 'TRES', '07-07': 'TRES', '07-09': 'UNO', '08-27': 'UNO', '07-13': 'UNO', '07-17': 'UNO', '07-19': 'UNO', '07-21': 'UNO', '14-01': 'UNO', '07-23': 'DOS', '07-25': 'DOS', '07-29': 'DOS', '08-41': 'DOS', '08-43': 'DOS', '08-47': 'DOS', '14-04': 'DOS', '14-07': 'CINCO', '07-31': 'CINCO', '40-03': 'CINCO', '16-01': 'SEIS', '14-11': 'SEIS', '01-01': 'DIECIOCHO', '35-02': 'CUATRO', '45-01': 'CUATRO', '45-02': 'CUATRO', '45-07': 'CUATRO', '45-08': 'CUATRO', '45-04': 'CUATRO', '15-18': 'SEIS', '15-19': 'SEIS'
}

let haberMin = ['260','260','260','260','260','260','260','260','308','308','308','308','308','308','308','308','308','308','350','350','350','350','350','350','350','350','350','350','350','470','470','470','470','470','470','470','530','530','530','530','530','530','530','530','596.2','596.2','596.2','596.2','596.2','596.2','655','655','655','655','690','690','690','690','690','690','690','690','770.66','770.66','770.66','770.66','770.66','770.66','827.23','827.23','827.23','827.23','827.23','827.23','895.15','895.15','895.15','895.15','895.15','895.15','1046.43','1046.43','1046.43','1046.43','1046.43','1046.43','1227.77','1227.77','1227.77','1227.77','1227.77','1227.77','1434.29','1434.29','1434.29','1434.29','1434.29','1434.29','1687.01','1687.01','1687.01','1687.01','1687.01','1687.01','1879.67','1879.67','1879.67','1879.67','1879.67','1879.67','2165','2165','2165','2165','2165','2165','2476.98','2476.98','2476.98','2476.98','2476.98','2476.98','2757.13','2757.13','2757.13','2757.13','2757.13','2757.13','3231.63','3231.63','3231.63','3231.63','3231.63','3231.63','3821.72','3821.72','3821.72','3821.72','3821.72','3821.72','4299.06','4299.06','4299.06','4299.06','4299.06','4299.06','4958.96','4958.96','4958.96','4958.96','4958.96','4958.96','5661.15','5661.15','5661.15','5661.15','5661.15','5661.15','6394.84','6394.84','6394.84','6394.84','6394.84','6394.84','7246.63','7246.63','7246.63','7246.63','7246.63','7246.63','7660.41','7660.41','7660.41','8096.29','8096.29','8096.29','8637.12','8637.12','8637.12','9309.09','9309.09','9309.09','10410.36','10410.36','10410.36','11528.43','11528.43','11528.43','12937.2','12937.2','12937.2','14067.91','14067.91','14067.91','15891.47','15891.47','15891.47','16864.03','16864.03','16864.03','18128.83','18128.83','18128.83','19035.29','19035.29','19035.29','20571.44','20571.44','20571.44','23064.7','23064.7','23064.7','25922.42','25922.42','25922.42','29061.62','29061.62','29061.62','32630.39','32630.39','32630.39', '37524.96', '37524.96', '37524.96','43352.59','43352.59','43352.59']

let tope = ['3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3441','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','3888.33','4374.37','4374.37','4374.37','4374.37','4374.37','4374.37','4702.45','4702.45','4702.45','4702.45','5055.13','5055.13','5055.13','5055.13','5055.13','5055.13','5055.13','5055.13','5646.08','5646.08','5646.08','5646.08','5646.08','5646.08','6060.5','6060.5','6060.5','6060.5','6060.5','6060.5','6558.07','6558.07','6558.07','6558.07','6558.07','6558.07','7666.38','7666.38','7666.38','7666.38','7666.38','7666.38','8994.96','8994.96','8994.96','8994.96','8994.96','8994.96','10507.91','10507.91','10507.91','10507.91','10507.91','10507.91','12359.4','12359.4','12359.4','12359.4','12359.4','12359.4','13770.84','13770.84','13770.84','13770.84','13770.84','13770.84','15861.25','15861.25','15861.25','15861.25','15861.25','15861.25','18146.86','18146.86','18146.86','18146.86','18146.86','18146.86','20199.27','20199.27','20199.27','20199.27','20199.27','20199.27','23675.56','23675.56','23675.56','23675.56','23675.56','23675.56','27998.72','27998.72','27998.72','27998.72','27998.72','27998.72','31495.76','31495.76','31495.76','31495.76','31495.76','31495.76','36330.36','36330.36','36330.36','36330.36','36330.36','36330.36','41474.74','41474.74','41474.74','41474.74','41474.74','41474.74','46849.87','46849.87','46849.87','46849.87','46849.87','46849.87','53090.27','53090.27','53090.27','53090.27','53090.27','53090.27','56121.72','56121.72','56121.72','59315.05','59315.05','59315.05','63277.3','63277.3','63277.3','68200.27','68200.27','68200.27','76268.36','76268.36','76268.36','84459.58','84459.58','84459.58','94780.54','94780.54','94780.54','103064.36','103064.36','103064.36','106934.71','106934.71','106934.71','113479.11','113479.11','113479.11','121990.04','121990.04','121990.04','128089.54','128089.54','128089.54','138426.37','138426.37','138426.37','155203.65','155203.65','155203.65','174433.38','174433.38','174433.38','195557.26','195557.26','195557.26','219571.69','219571.69','219571.69', '252507.44','252507.44','252507.44','291721.85','291721.85','291721.85']

let pbu = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','364.1','364.1','364.1','364.1','364.1','364.1','390.82','390.82','390.82','390.82','390.82','390.82','422.91','422.91','422.91','422.91','422.91','422.91','494.38','494.38','494.38','494.38','494.38','494.38','580.06','580.06','580.06','580.06','580.06','580.06','677.62','677.62','677.62','677.62','677.62','677.62','797.02','797.02','797.02','797.02','797.02','797.02','888.04','888.04','888.04','888.04','888.04','888.04','1022.84','1022.84','1022.84','1022.84','1022.84','1022.84','1170.23','1170.23','1170.23','1170.23','1170.23','1170.23','1302.58','1302.58','1302.58','1302.58','1302.58','1302.58','1526.75','1526.75','1526.75','1526.75','1526.75','1526.75','1805.53','1805.53','1805.53','1805.53','1805.53','1805.53','2031.04','2031.04','2031.04','2031.04','2031.04','2031.04','2342.8','2342.8','2342.8','2342.8','2342.8','2342.8','2674.54','2674.54','2674.54','2674.54','2674.54','2674.54','3021.16','3021.16','3021.16','3021.16','3021.16','3021.16','3423.58','3423.58','3423.58','3423.58','3423.58','3423.58','3619.07','3619.07','3619.07','3825','3825','3825','4080.51','4080.51','4080.51','4397.97','4397.97','4397.97','4918.25','4918.25','4918.25','5446.47','5446.47','5446.47','6112.03','6112.03','6112.03','6646.22','6646.22','6646.22','6799.08','6799.08','6799.08','7215.18','7215.18','7215.18','7756.32','7756.32','7756.32','8144.14','8144.14','8144.14','9410.5','9410.5','9410.5','10551.05','10551.05','10551.05','11858.33','11858.33','11858.33','13294.37','13294.37','13294.37','14926.92','14926.92','14926.92', '17165.96', '17165.96', '17165.96','19831.83','19831.83','19831.83']

let coefDocente = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.0733, 1, 1, 1, 1, 1, 1.0098, 1, 1, 1, 1, 1, 1.169, 1, 1, 1, 1, 1, 1.1733, 1, 1, 1, 1, 1, 1.1682, 1, 1, 1, 1, 1, 1.1762, 1, 1, 1, 1, 1, 1.0698, 1, 1, 1, 1, 1, 1.1548, 1, 1, 1, 1, 1, 1.0912, 1, 1, 1, 1, 1, 1.1131, 1, 1, 1, 1, 1, 1.1519, 1, 1, 1, 1, 1, 1.1826, 1, 1, 1, 1, 1, 1.0886, 1, 1, 1, 1, 1, 1.1535, 1, 1, 1, 1, 1, 1.1449, 1, 1, 1, 1, 1, 1.1296, 1, 1, 1, 1, 1, 1.1166, 1, 1, 1, 1, 1, 1.1165, 1, 1, 1, 1, 1, 1.0954, 1, 1, 1, 1, 1, 1.2562, 1, 1, 1, 1, 1, 1.1885, 1, 1, 1, 1, 1, 1.2329, 1, 1, 1, 1, 1, 1.1422, 1, 1, 1, 1, 1, 1.1037, 1, 1, 1, 1, 1, 1.1906, 1, 1, 1.1461, 1, 1, 1.0938, 1, 1, 1, 1, 1]

let coefInvestigadores = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1., 1, 1, 1, 1, 1, 1., 1, 1, 1, 1, 1, 1.0972, 1, 1, 1, 1, 1, 1.1237, 1, 1, 1, 1, 1, 1.2281, 1, 1, 1, 1, 1, 1.12, 1, 1, 1, 1, 1, 1.193, 1, 1, 1, 1, 1, 1.0304, 1, 1, 1, 1, 1, 1.1754, 1, 1, 1, 1, 1, 1.0607, 1, 1, 1, 1, 1, 1.1118, 1, 1, 1, 1, 1, 1.2819, 1, 1, 1, 1, 1, 1.1709, 1, 1, 1, 1, 1, 1.1221, 1, 1, 1, 1, 1, 1.186, 1, 1, 1, 1, 1, 1.1341, 1, 1, 1, 1, 1, 1.1024, 1, 1, 1, 1, 1, 1.134, 1, 1, 1, 1, 1, 1.0738, 1, 1, 1, 1, 1, 1.1931, 1, 1, 1, 1, 1, 1.086, 1, 1, 1, 1, 1, 1.3064, 1, 1, 1, 1, 1, 1.1919, 1, 1, 1, 1, 1, 1.07, 1, 1, 1, 1, 1, 1.2540, 1, 1, 1.0877, 1, 1, 1.1129, 1, 1, 1, 1, 1]

let coefLyF = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1., 1, 1, 1, 1, 1, 1., 1, 1, 1, 1, 1, 1.0923, 1, 1, 1, 1, 1, 1.1061, 1, 1, 1, 1, 1, 1.1061, 1, 1, 1, 1, 1, 1.1818, 1, 1, 1, 1, 1, 1.1818, 1, 1, 1, 1, 1, 1.1273, 1, 1, 1, 1, 1, 1.1273, 1, 1, 1, 1, 1, 1.1356, 1, 1, 1, 1, 1, 1.1356, 1, 1, 1, 1, 1, 1.1648, 1, 1, 1, 1, 1, 1.1648, 1, 1, 1, 1, 1, 1.1609, 1, 1, 1, 1, 1, 1.1609, 1, 1, 1, 1, 1, 1.1483, 1, 1, 1, 1, 1, 1.1483, 1, 1, 1, 1, 1, 1.1354, 1, 1, 1, 1, 1, 1.1354, 1, 1, 1, 1, 1, 1.134, 1, 1, 1, 1, 1, 1.134, 1, 1, 1, 1, 1, 1.1876, 1, 1, 1, 1, 1, 1.1876, 1, 1, 1, 1, 1, 1.1543, 1, 1, 1, 1, 1, 1.1876, 1, 1, 1, 1, 1, 1.2112, 1, 1, 1, 1, 1]

let liq = []


let coefCajas={01:1.42811652,02:1.70168802,03:1.51635023,04:1.63802123,05:1.43244623,06:2.01941879,07:1.53313597,08:2.08095761,09:1.54776712,10:1.22957246,11:1.69174572,12:1.11349601,13:1.29650846,15:1.49962818,16:1.1755901}

let ConceptosM = { '001050': 'SUELDO BASICO -', '001051': 'JUBILACION LIMITADA -', '001073': 'HABER ACUMULADO MINIMO -', '001053': 'JUBILACION LEY 18037 -', '008115': 'INCENTIVO MEJORAS AL SERVICIO DE JUSTICIA', '001181': 'PRESTACION BASICA UNIVERS.LEY 24241-', '001054': 'SUPLEMENTO REMUNER.ACORDADA 71/93 -', '001078': 'HABER MINIMO ART.20 LEY 22940      ', '001055': 'COMPENSACION JERARQUICA -', '001056': 'COMPENSACION FUNCIONAL -', '001057': 'COMPENSACION FUNCIONAL PORCENTAJE -', '014056': 'AJUSTE COMPENSACION FUNCIONAL -', '201056': 'DEDUCCION COMPENSACION FUNCIONAL -', '008115': 'INCENTIVO MEJORAS AL SERVICIO DE JUSTICIA', '001058': 'HABER ACUMULATIVO -', '001059': 'PERMANENCIA CATEGORIA -', '014059': 'AJUSTE PERMANENCIA CATEGORIA -', '001060': 'DIFERENCIA ART.4 LEY 22738 -', '001070': 'RESOLUCION  47/04 Y 195/04          ', '001080': 'EQUIPARACION CARGO CONSEJERO       ', '001090': 'HABER ACUMULATIVO - LEY 26.508', '014058': 'AJUSTE HABER ACUMULATIVO -', '014053': 'AJUSTE LEY 18037 -', '001069': 'MOVILIDAD FIJA -', '001084': 'ACORDADA CSJN Nº 18/2008', '001074': 'DIFERENCIA ACORDADA 71/93 -', '001061': 'BONIFICACION TITULO -', '001062': 'BONIFICACION TITULO PORCENTAJE -', '001071': 'BONIFICACION TITULO SECUNDARIO MINISTERIO PUBLICO ', '101061': 'AJUSTE TITULO', '001063': 'BONIFICACION ANTIGUEDAD SERVICIO -', '001064': 'BONIFICACION ANTIGUEDAD TITULO -', '014063': 'AJUSTE ANTIGUEDAD -', '014064': 'AJUSTE ANTIGUEDAD TITULO -', '021050': 'COMPENSACION RESIDENCIA BONIF. 20%' }

let descConcepto = { '101': 'SUELDO BASICO -', '102': 'JUBILACION LIMITADA -', '103': 'HABER ACUMULADO MINIMO -', '104': 'JUBILACION LEY 18037 -', '105': 'INCENTIVO MEJORAS AL SERVICIO DE JUSTICIA', '106': 'PRESTACION BASICA UNIVERS.LEY 24241-', '108': 'SUPLEMENTO REMUNER.ACORDADA 71/93 -', '109': 'HABER MINIMO ART.20 LEY 22940      ', '110': 'COMPENSACION JERARQUICA -', '111': 'BONIFICACION TITULO- PODER JUDICIAL -', '112': 'COMPENSACION FUNCIONAL PORCENTAJE -', '113': 'AJUSTE COMPENSACION FUNCIONAL -', '114': 'DEDUCCION COMPENSACION FUNCIONAL -', '115': 'INCENTIVO MEJORAS AL SERVICIO DE JUSTICIA', '116': 'HABER ACUMULATIVO -', '117': 'PERMANENCIA CATEGORIA -', '118': 'AJUSTE PERMANENCIA CATEGORIA -', '119': 'DIFERENCIA ART.4 LEY 22738 -', '120': 'RESOLUCION  47/04 Y 195/04          ', '121': 'EQUIPARACION CARGO CONSEJERO       ', '127': 'HABER ACUMULATIVO - LEY 26.508', '130': 'AJUSTE HABER ACUMULATIVO -', '131': 'AJUSTE LEY 18037 -', '145': 'MOVILIDAD FIJA -', '157': 'ACORDADA CSJN Nº 18/2008', '188': 'DIFERENCIA ACORDADA 71/93 -', '190': 'BONIFICACION TITULO -', '191': 'BONIFICACION TITULO PORCENTAJE -', '192': 'BONIFICACION TITULO SECUNDARIO MINISTERIO PUBLICO ', '194': 'AJUSTE TITULO', '195': 'BONIFICACION ANTIGUEDAD SERVICIO -', '196': 'BONIFICACION ANTIGUEDAD TITULO -', '197': 'AJUSTE ANTIGUEDAD -', '198': 'AJUSTE ANTIGUEDAD TITULO -', '200': 'COMPENSACION RESIDENCIA BONIF. 20%', '201': 'DEDUCCION COMPENSACION RESIDENCIA', '205': 'RES. PROCURACION GRAL NACION 87/06', '215': 'COMPENSACION ELECTORES -', '220': 'SUPLEMENTO ACORDADA 37/94 Y 35/95 -', '221': 'SUPLEMENTO ACORDADA 37/94 Y 35/95 - BONIFICABLE', '225': 'HABER LEY 22955 -', '226': 'CARGOS PROVINCIALES -', '227': 'EQUIPARACION LEY 24946             ', '228': 'REPRESENTACION O.S.P.J.            ', '229': 'SUBROGANCIA - R 76/04', '230': 'TAREAS PELIGROSAS E INSALUBRES -', '231': 'DEDUCCION TAREAS INSALUBRES -', '235': 'TAREAS INSALUBRES ACORDADA 21/97   ', '240': 'COMPENSACION RESIDENCIA - ACORDADA 19/99', '266': 'DEDUCCION POR FALLECIMIENTO', '276': 'DESARRAIGO', '280': 'MES ANTERIOR', '281': 'MES ANTERIOR DOCENTE', '282': 'AJUSTE MES ANTERIOR', '283': 'AJUSTE HABER ACUMULATIVO -', '290': 'DEDUCCION HABERES', '290': 'DEDUCCION HABERES', '291': 'DEDUCCION HABERES', '291': 'DEDUCCION HABERES', '292': 'DEDUCCION DE HABERES 20% ', '298': 'LEY 24463 SOLIDARIDAD PREVISIONAL - LEY24241', '299': 'LEY 24463 SOLIDARIDAD PREVISIONAL - LEY24241', '300': 'AJUSTE OCTUBRE / 93 - -', '360': 'AGUINALDO NORMAL -', '361': 'AGUINALDO NORMAL -', '362': 'AJUSTE AGUINALDO', '363': 'DEDUCCION AGUINALDO - -', '364': 'AGUINALDO DOCENTE -', '366': 'AGUINALDO CARGOS PROVINCIALES -', '410': 'ASIGNACION POR MATRIMONIO -', '412': 'ASIGNACION POR NACIMIENTO -', '414': 'ASIGNACION POR CONYUGE -', '416': 'ASIGNACION POR HIJO -', '418': 'ASIGNACION FAMILIA NUMEROSA -', '419': 'ESCOLARIDAD PRIMARIA INCAPACITADO -', '420': 'ESCOLARIDAD PRIMARIA -', '421': 'ASIGNACION PREESCOLAR -', '422': 'ESCOLARIDAD PRIMARIA FLIA.NUMEROSA -', '424': 'ESCOLARIDAD MEDIA O SUPERIOR -', '425': 'ESC.MEDIA O SUPERIOR INCAPACITADO -', '426': 'ESC.MEDIA O SUPERIOR FLIA.NUMEROSA -', '427': 'ASIGNACION PREESCOLAR FLIA.NUMEROSA-', '428': 'ASIGNACION HIJO INCAPACITADO -', '429': 'ESC.PRIM.FLIA.NUM.HIJO INCAPACITADO-', '430': 'AYUDA ESCALAR PRIMARIA -', '431': 'AYUDA ESC.PRIM.P/HIJO INCAPACITDO -', '432': 'PRE-NATAL -', '434': 'ASIG.ANUALCOMPL.DE VACACIONES -', '435': 'ASIG.ANUALCOMPL.DE VACACIONES -', '437': 'ASIG.ANUALCOMPL.DE VACACIONES -', '441': 'REAJUSTE ASIGNACION FAMILIAR -', '499': 'REINTEGRO - PODER JUDICIAL  DTO. 109', '500': 'LIQ.AUSENTE AL COBRO - -', '510': 'DEDUCCION POR MATRIMONIO -', '512': 'DEDUCCION ASIG. POR NACIMIENTO -', '514': 'DEDUCCION ASIG. POR CONYUGE -', '516': 'DEDUCCION ASIG. POR HIJO -', '518': 'DEDUCCION ASIG. POR FLIA.NUMEROSA -', '520': 'DEDUCCION ASIG. POR ESC.PRIMARIA -', '522': 'DEDUCCION ESC.PRIM.FLIA.NUMEROSA -', '524': 'DEDUCCION ESC.MEDIA O SUPERIOR -', '526': 'DEDUCC.ESC.MEDIA O SUP.FLIA.NUMEROSA -', '527': 'DEDUCCION PREESCOLAR -', '528': 'DEDUCCION ASIG. POR HIJO INCAPACITADO -', '530': 'DEDUCCION ASIG. AYUDA ESC.PRIMARIA -', '532': 'DEDUCCION ASIG. POR PRENATAL -', '534': 'DEDUCC.ASIG.ANUAL COMP.VACACIONES -', '550': 'REAJUSTE POR MATRIMONIO -', '552': 'REAJUSTE POR NACIMIENTO -', '554': 'REAJUSTE POR CONYUGE -', '556': 'REAJUSTE POR HIJO -', '558': 'REAJUSTE POR FLIA.NUMEROSA -', '560': 'REAJUSTE POR ESCOLARIDAD PRIMARIA -', '561': 'REAJUSTE PRE-ESCOLARIDAD -', '562': 'REAJUSTE ESC.PRIMARIA FLIA.NUMEROSA -', '564': 'REAJUSTE ESC.MEDIA O SUPERIOR -', '566': 'REAJUSTE ESC.MEDIA O SUP.FLIA.NUMEROSA -', '568': 'REAJUSTE ASIG.POR HIJO INCAPACITADO -', '570': 'REAJUSTE AYUDA ESCOLAR PRIMARIA -', '572': 'REAJUSTE POR PRE-NATAL -', '574': 'REAJUSTE ASIG.ANUAL C.VACACIONES -', '578': 'REAJUSTE ASIGNACION FAMILIAR -', '602': 'RETENCION IMPUESTO A LAS GANANCIAS -', '603': 'RETENCION IMPUESTO A LAS GANANCIAS -', '604': 'AJUSTE RETENCION IMPUESTO A LAS GANANCIAS -', '608': 'RETENCION LEY 23549 TIT.1RO. -', '618': 'I.N.S.S.J.P. - DESCUENTO SOBRE HABERES RETROCTIVOS', '619': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '620': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '622': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '624': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '625': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '626': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '627': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '628': 'CONCEPTOS UNIFICADOS OBRA SOCIAL ACORDADA 40/87 -', '630': 'APORTES LEY 23278 - -', '632': 'AJUSTE APORTE LEY 23278 -', '634': 'APORTES JUBILATORIOS OMITIDOS', '645': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '650': 'EMBARGO COMUN -', '652': 'AJUSTE EMBARGO COMUN -', '655': 'CUOTA ALIMENTO -', '656': 'CUOTA ALIMENTO - S.A.C. -', '660': 'AJUSTE CUOTA ALIMENTO -', '662': 'PRIMER EMBARGO % SOBRE HABER BRUTO - -', '680': 'AJUSTE SEGURO OBLIGATORIO -', '685': 'AJUSTE SEGURO ADICIONAL -', '700': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '701': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '702': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '703': 'ASOC. MAGISTRADOS Y FUNC - SEG. COLECTIVO DE SEPELIO', '705': 'CONCEPTOS UNIFICADOS-OBRA SOCIAL- -', '714': 'CONCEPTOS UNIFICADOS-OBRA SOCIAL- -', '715': 'CONCEPTOS UNIFICADOS-OBRA SOCIAL- -', '716': 'CONCEPTOS UNIFICADOS-OBRA SOCIAL- -', '717': 'CONCEPTOS UNIFICADOS-OBRA SOCIAL- -', '718': 'CONCEPTOS UNIFICADOS-OBRA SOCIAL- -', '719': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '720': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '721': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '723': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '725': 'SOCIEDAD MUTUAL - -', '726': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '727': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '728': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '732': 'INST.MAGISTR. EN RETIRO - -', '745': 'CONCEPTOS UNIFICADOS - A.M. CIRCULO - -', '746': 'CONCEPTOS UNIFICADOS - A.M. CIRCULO - -', '747': 'CONCEPTOS UNIFICADOS - A.M. CIRCULO - -', '748': 'CONCEPTOS UNIFICADOS - A.M. CIRCULO - -', '749': 'CONCEPTOS UNIFICADOS - A.M. CIRCULO - -', '751': 'OBRA SOCIAL DEL PODER JUDICIAL - CUOTA ADHERENTE', '752': 'OBRA SOCIAL DEL PODER JUDICIAL - CUOTA ADHERENTE', '753': 'OBRA SOCIAL DEL PODER JUDICIAL - CUOTA ADHERENTE', '754': 'OBRA SOCIAL DEL PODER JUDICIAL - CUOTA ADHERENTE', '755': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '757': 'OBRA SOCIAL DEL PODER JUDICIAL - CUOTA ADHERENTE', '760': 'CONCEPTOS UNIFICADOS - OBRA SOCIAL - -', '765': 'CLUB TRIBUNALES - -', '771': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '775': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '777': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '780': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '785': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '790': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '791': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '793': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '795': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '796': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '800': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '805': 'CONCEPTOS UNIFICADOS-ASOCIACION MAGISTRADOS- -', '815': 'CONCEPTOS UNIFICADOS - ASOCIAC.JUDICIAL - -', '820': 'CONCEPTOS UNIFICADOS - CEDIM - -', '821': 'CONCEPTOS UNIFICADOS - CEDIM - -', '828': 'UNION PERSONAL DEL POD JUD NACION - COMPRA CON TARJETA', '832': 'UNION PERSONAL DEL POD JUD NACION - COMPRAS', '833': 'U. P. J. N.  - CREDITOS DEL BANCO CIUDAD (28/02/2011)', '835': 'CONCEPTOS UNIFICADOS - MUTUAL PERSONAL JUST. -', '836': 'CONCEPTOS UNIFICADOS - MUTUAL PERSONAL JUST. -', '837': 'CONCEPTOS UNIFICADOS - MUTUAL PERSONAL JUST. -', '838': 'CONCEPTOS UNIFICADOS - MUTUAL PERSONAL JUST. -', '908': 'DESCUENTO REDONDEO - -', '909': 'AJUSTE POR REDONDEO - -' }

let equivalenciaConceptos = { '101': '001050', '102': '001051', '103': '001073', '104': '001053', '105': '001096', '106': '001181', '108': '001054', '109': '001078', '110': '001055', '111': '001061', '112': '001057', '113': '014056', '114': '201056', '115': '008115', '116': '001058', '117': '001059', '118': '014059', '119': '001060', '120': '001070', '121': '001080', '127': '001090', '130': '014058', '131': '014053', '145': '001069', '157': '001084', '188': '001074', '190': '001061', '191': '001062', '192': '001071', '194': '101061', '195': '001063', '196': '001064', '197': '014063', '198': '014064', '200': '021050', '201': '221050', '205': '001086', '215': '001065', '220': '001066', '221': '001081', '225': '001072', '226': '001067', '227': '001075', '228': '001076', '229': '001095', '230': '001068', '231': '221068', '235': '001077', '240': '021077', '266': '221051', '276': '001083', '280': '014050', '281': '014070', '282': '014057', '283': '014058', '290': '201050', '290': '201150', '291': '201050', '291': '201150', '292': '201051', '298': '204150', '299': '204150', '300': '014051', '360': '002050', '361': '002050', '362': '102050', '363': '202050', '364': '002070', '366': '002067', '410': '068050', '412': '067050', '414': '060050', '416': '061050', '418': '064050', '419': '053050', '420': '062050', '421': '046050', '422': '072050', '424': '063050', '425': '054050', '426': '073050', '427': '045050', '428': '058050', '429': '055050', '430': '065050', '431': '057050', '432': '069050', '434': '066050', '435': '066050', '437': '066050', '441': '170050', '499': '701051', '500': '005050', '510': '268050', '512': '267050', '514': '260050', '516': '261050', '518': '264050', '520': '262050', '522': '272050', '524': '263050', '526': '273050', '527': '246050', '528': '258050', '530': '265050', '532': '269050', '534': '266050', '550': '168050', '552': '167050', '554': '160050', '556': '161050', '558': '164050', '560': '162050', '561': '146050', '562': '172050', '564': '163050', '566': '173050', '568': '158050', '570': '165050', '572': '169050', '574': '166050', '578': '170050', '602': '309050', '603': '309050', '604': '509050', '608': '309051', '618': '518008', '619': '322050', '620': '322050', '622': '322050', '624': '322050', '625': '322050', '626': '322050', '627': '322050', '628': '322050', '630': '300073', '632': '500073', '634': '314070', '645': '324059', '650': '310050', '652': '510050', '655': '401050', '656': '402050', '660': '401051', '662': '401148', '680': '357050', '685': '358050', '700': '324052', '701': '324052', '702': '324052', '703': '358052', '705': '332051', '714': '332051', '715': '332051', '716': '332051', '717': '332051', '718': '332051', '719': '322051', '720': '322051', '721': '322051', '723': '322051', '725': '324054', '726': '322051', '727': '322051', '728': '322051', '732': '324057', '745': '324053', '746': '324053', '747': '324053', '748': '324053', '749': '324053', '751': '326751', '752': '326751', '753': '326751', '754': '326751', '755': '322051', '757': '326751', '760': '322051', '765': '324058', '771': '324052', '775': '324052', '777': '324052', '780': '324052', '785': '324052', '790': '324059', '791': '324059', '793': '324059', '795': '324059', '796': '324059', '800': '324059', '805': '324052', '815': '324059', '820': '324056', '821': '324056', '828': '315051', '832': '315050', '833': '314052', '835': '324055', '836': '324055', '837': '324055', '838': '324055', '908': '299050', '909': '099050' }

let fechas=['20210101','20210102','20210103','20210104','20210105','20210106','20210107','20210108','20210109','20210110','20210111','20210112','20210113','20210114','20210115','20210116','20210117','20210118','20210119','20210120','20210121','20210122','20210123','20210124','20210125','20210126','20210127','20210128','20210129','20210130','20210131','20210201','20210202','20210203','20210204','20210205','20210206','20210207','20210208','20210209','20210210','20210211','20210212','20210213','20210214','20210215','20210216','20210217','20210218','20210219','20210220','20210221','20210222','20210223','20210224','20210225','20210226','20210227','20210228','20210301','20210302','20210303','20210304','20210305','20210306','20210307','20210308','20210309','20210310','20210311','20210312','20210313','20210314','20210315','20210316','20210317','20210318','20210319','20210320','20210321','20210322','20210323','20210324','20210325','20210326','20210327','20210328','20210329','20210330','20210331','20210401','20210402','20210403','20210404','20210405','20210406','20210407','20210408','20210409','20210410','20210411','20210412','20210413','20210414','20210415','20210416','20210417','20210418','20210419','20210420','20210421','20210422','20210423','20210424','20210425','20210426','20210427','20210428','20210429','20210430','20210501','20210502','20210503','20210504','20210505','20210506','20210507','20210508','20210509','20210510','20210511','20210512','20210513','20210514','20210515','20210516','20210517','20210518','20210519','20210520','20210521','20210522','20210523','20210524','20210525','20210526','20210527','20210528','20210529','20210530','20210531','20210601','20210602','20210603','20210604','20210605','20210606','20210607','20210608','20210609','20210610','20210611','20210612','20210613','20210614','20210615','20210616','20210617','20210618','20210619','20210620','20210621','20210622','20210623','20210624','20210625','20210626','20210627','20210628','20210629','20210630','20210701','20210702','20210703','20210704','20210705','20210706','20210707','20210708','20210709','20210710','20210711','20210712','20210713','20210714','20210715','20210716','20210717','20210718','20210719','20210720','20210721','20210722','20210723','20210724','20210725','20210726','20210727','20210728','20210729','20210730','20210731','20210801','20210802','20210803','20210804','20210805','20210806','20210807','20210808','20210809','20210810','20210811','20210812','20210813','20210814','20210815','20210816','20210817','20210818','20210819','20210820','20210821','20210822','20210823','20210824','20210825','20210826','20210827','20210828','20210829','20210830','20210831','20210901','20210902','20210903','20210904','20210905','20210906','20210907','20210908','20210909','20210910','20210911','20210912','20210913','20210914','20210915','20210916','20210917','20210918','20210919','20210920','20210921','20210922','20210923','20210924','20210925','20210926','20210927','20210928','20210929','20210930','20211001','20211002','20211003','20211004','20211005','20211006','20211007','20211008','20211009','20211010','20211011','20211012','20211013','20211014','20211015','20211016','20211017','20211018','20211019','20211020','20211021','20211022','20211023','20211024','20211025','20211026','20211027','20211028','20211029','20211030','20211031','20211101','20211102','20211103','20211104','20211105','20211106','20211107','20211108','20211109','20211110','20211111','20211112','20211113','20211114','20211115','20211116','20211117','20211118','20211119','20211120','20211121','20211122','20211123','20211124','20211125','20211126','20211127','20211128','20211129','20211130','20211201','20211202','20211203','20211204','20211205','20211206','20211207','20211208','20211209','20211210','20211211','20211212','20211213','20211214','20211215','20211216','20211217','20211218','20211219','20211220','20211221','20211222','20211223','20211224','20211225','20211226','20211227','20211228','20211229','20211230','20211231','20220101','20220102','20220103','20220104','20220105','20220106','20220107','20220108','20220109','20220110','20220111','20220112','20220113','20220114','20220115','20220116','20220117','20220118','20220119','20220120','20220121','20220122','20220123','20220124','20220125','20220126','20220127','20220128','20220129','20220130','20220131','20220201','20220202','20220203','20220204','20220205','20220206','20220207','20220208','20220209','20220210','20220211','20220212','20220213','20220214','20220215','20220216','20220217','20220218','20220219','20220220','20220221','20220222','20220223','20220224','20220225','20220226','20220227','20220228','20220301','20220302','20220303','20220304','20220305','20220306','20220307','20220308','20220309','20220310','20220311','20220312','20220313','20220314','20220315','20220316','20220317','20220318','20220319','20220320','20220321','20220322','20220323','20220324','20220325','20220326','20220327','20220328','20220329','20220330','20220331','20220401','20220402','20220403','20220404','20220405','20220406','20220407','20220408','20220409','20220410','20220411','20220412','20220413','20220414','20220415','20220416','20220417','20220418','20220419','20220420','20220421','20220422','20220423','20220424','20220425','20220426','20220427','20220428','20220429','20220430','20220501','20220502','20220503','20220504','20220505','20220506','20220507','20220508','20220509','20220510','20220511','20220512','20220513','20220514','20220515','20220516','20220517','20220518','20220519','20220520','20220521','20220522','20220523','20220524','20220525','20220526','20220527','20220528','20220529','20220530','20220531','20220601','20220602','20220603','20220604','20220605','20220606','20220607','20220608','20220609','20220610','20220611','20220612','20220613','20220614','20220615','20220616','20220617','20220618','20220619','20220620','20220621','20220622','20220623','20220624','20220625','20220626','20220627','20220628','20220629','20220630','20220701','20220702','20220703','20220704','20220705','20220706','20220707','20220708','20220709','20220710','20220711','20220712','20220713','20220714','20220715','20220716','20220717','20220718','20220719','20220720','20220721','20220722','20220723','20220724','20220725','20220726','20220727','20220728','20220729','20220730','20220731','20220801','20220802','20220803','20220804','20220805','20220806','20220807','20220808','20220809','20220810','20220811','20220812','20220813','20220814','20220815','20220816','20220817','20220818','20220819','20220820','20220821','20220822','20220823','20220824','20220825','20220826','20220827','20220828','20220829','20220830','20220831','20220901','20220902','20220903','20220904','20220905','20220906','20220907','20220908','20220909','20220910','20220911','20220912','20220913','20220914','20220915','20220916','20220917','20220918','20220919','20220920','20220921','20220922','20220923','20220924','20220925','20220926','20220927','20220928','20220929','20220930','20221001','20221002','20221003','20221004','20221005','20221006','20221007','20221008','20221009','20221010','20221011','20221012','20221013','20221014','20221015','20221016','20221017','20221018','20221019','20221020','20221021','20221022','20221023','20221024','20221025','20221026','20221027','20221028','20221029','20221030','20221031','20221101','20221102','20221103','20221104','20221105','20221106','20221107','20221108','20221109','20221110','20221111','20221112','20221113','20221114','20221115','20221116','20221117','20221118','20221119','20221120','20221121','20221122','20221123','20221124','20221125','20221126','20221127','20221128','20221129','20221130','20221201','20221202','20221203','20221204','20221205','20221206','20221207','20221208','20221209','20221210','20221211','20221212','20221213','20221214','20221215','20221216','20221217','20221218','20221219','20221220','20221221','20221222','20221223','20221224','20221225','20221226','20221227','20221228','20221229','20221230','20221231','20230101']

let diasH=['F','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','F','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','F','H','H','S','D','H','H','H','F','F','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','F','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','F','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','F','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','F','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','F','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','F','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','F','S','D','H','H','H','H','H','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','F','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','F','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','F','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','F','F','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D','H','H','H','H','H','S','D']

let counter = 0
let totPeríodos=0
let Comunes=0
let Docente=0
let Investigador=0
let Otra_Caja=0
let PJN=0
let Cancillería=0
let Calorías=0
let Otros_A=0
let Otros_B=0
let Otros_C=0

//actualizar remu
let totalA=0
let totalO=0


function verInfoBasica(mes, año) {
    var periodo = año + mes + "01";
    var nro = nPer.indexOf(periodo);

    // mínima  
    var min = haberMin[nro];
    document.getElementById('minima').textContent=min
    // tope
    var top = tope[nro];
    document.getElementById('tope').textContent= top
    var topeZA = parseFloat(top)*1.4;
    document.getElementById('topeZA').textContent= topeZA.toFixed(2)
    //PBU
    var PBU = pbu[nro];
    document.getElementById('pbu').textContent=  PBU   // movilidad 24241
    var movLg = (coeficienteMovilidad[nro] - 1) * 100;
    document.getElementById('movLg').textContent= movLg.toFixed(2) + '%'
    // movilidad docente
    var movDoc = (coefDocente[nro] - 1) * 100;
    document.getElementById('coefDocente').textContent= movDoc.toFixed(2) + '%'
    // movilidad investigadores
    var movInv = (coefInvestigadores[nro] - 1) * 100;
    document.getElementById('coefInv').textContent= movInv.toFixed(2) + '%'
    // movilidad luz y fuerza
    var movLyF = (coefLyF[nro] - 1) * 100;
    document.getElementById('coefLyF').textContent= movLyF.toFixed(2) + '%'

    var nota = 'Los montos e índices en pantalla corresponden al período ' + mes + '/' + año
    document.getElementById('nota').textContent = nota

//for (x=0; x<4; x++) {
//if (tablaSICA.rows[1].cells[x].textContent =! "-") {
//tablaSICA.rows[1].cells[x].textContent=new Intl.NumberFormat(['ban','id']).format(tablaSICA.rows[1].[x].textContent)
//}
//}

}

function Calcular(mes, año, mHasta, aHasta, monto) {
    var fechaDesde = año + mes + "01"
    var fechaHasta = aHasta + mHasta + "01"
    var nro = nPer.indexOf(fechaDesde)
    var nFin = nPer.indexOf(fechaHasta)
    var importe = monto
    if (nro < nFin) {
        nro = nro + 1;
        do {
            importe = importe * coeficienteMovilidad[nro];
            if (nro == 194) importe = importe + 1500;
            nro = nro + 1;
        }
        while (nro < nFin + 1);
    } else {
        do {
            importe = importe / coeficienteMovilidad[nro];
            if (nro == 195) importe = importe - 1500;
            nro = nro - 1;
        }
        while (nro > nFin);
    }
    document.getElementById('result').value = importe.toFixed(2);
    return importe.toFixed(2)
}

function LG(mes, año, mHasta, aHasta, monto) {
    var fechaDesde = año + mes + "01"
    var fechaHasta = aHasta + mHasta + "01"
    var nro = nPer.indexOf(fechaDesde)
    var nFin = nPer.indexOf(fechaHasta)
    var importe = monto
    if (nro < nFin) {
        nro = nro + 1;
        do {
            importe = importe * coeficienteMovilidad[nro];
            if (nro == 194) importe = importe + 1500;
            nro = nro + 1;
        }
        while (nro < nFin + 1);
    } else {
        do {
            importe = importe / coeficienteMovilidad[nro];
            if (nro == 195) importe = importe - 1500;
            nro = nro - 1;
        }
        while (nro > nFin - 1);
    }
    return importe.toFixed(2)
}

function pami(mes, año, monto) {
    var per = año + mes + "01"
    var perMin = nPer.indexOf(per)
    var minima = haberMin[perMin]
    if (monto > parseInt(tope[perMin])) {
        window.alert("El importe ingresado es mayor al tope para el período seleccionado. El resultado no estará limitado al tope de referencia (" + tope[perMin] + ")")
    }
    var haberMinimo = parseFloat(minima.replace(",", "."))
    var resPami = haberMinimo * 0.03 + (monto - haberMinimo) * 0.06

    if (monto < haberMinimo) {
        window.alert("El importe ingresado es menor a la mínima de Ley para el período seleccionado. El resultado será el 3% de la mínima (" + haberMinimo + ")")
        resPami = monto * 0.03
    }

    document.getElementById('resultOs').value = resPami.toFixed(2)

}

function modifTabla() {
    document.getElementById("liquidación").rows[1].cells[1].textContent = "Cambiado";
    // console.log=(getElementById('mesDesde'))
    var pag = HTMLAllCollection(asistente.html)
    console.log(pag.getElementById(mesDesde))
}

function liquidarTabla(mes, año, mHasta, aHasta, monto, montoA) {
    // window.open("tabla.html")
    // window.location.href='tabla.html'
    var fechaDesde = año + mes + "01"
    var fechaHasta = aHasta + mHasta + "01"
    var nro = nPer.indexOf(fechaDesde)
    var nFin = nPer.indexOf(fechaHasta)
    var cantFilas = nFin - nro + 3
    var importe = parseFloat(monto.replace(",", "."))
    var importeA = parseFloat(montoA.replace(",", "."))
    var dif = 0
    // let liq = Array()

    // Obtenemos la referencia del elemento body
    var body = document.getElementById("Ajustes");
    // Creamos un elemento <table> y un elemento <tbody>
    var tabla = document.createElement("table");
    var tblBody = document.createElement("tbody");



    // Creamos las celdas
    for (var i = 0; i < cantFilas; i++) {
        // Creamos las hileras de la tabla
        var fila = document.createElement("tr");
        for (var j = 0; j < 4; j++) {
            // Crea un elemento <td> y un nodo de texto, hace que el nodo de
            // texto sea el contenido de <td>, ubica el elemento <td> al final
            // de la hilera de la tabla
            var celda = document.createElement("td");
            var textoCelda = document.createTextNode(i + " - " + j);
            celda.appendChild(textoCelda);
            fila.appendChild(celda);
        }
        // agregamos la hilera al final de la tabla (al final del elemento tblbody)
        tblBody.appendChild(fila);
    }
    // posicionamos el <tbody> debajo del elemento <table>
    tabla.appendChild(tblBody);
    // appends <table> into <body>
    body.appendChild(tabla);
    // modifica el atributo "border" de la tabla y lo fija a "2";
    tabla.setAttribute("border", 2);
    tabla.setAttribute("id", "tabla");
    // tabla.setAttribute("text-align:right");

    var result = document.getElementById("resultado");
    // result.appendChild(tabla);

    // pongo los títulos
    var cuenta = 0
    document.getElementById("tabla").rows[cuenta].cells[1].textContent = "Importe Original";
    document.getElementById("tabla").rows[cuenta].cells[2].textContent = "Nuevo Importe";
    document.getElementById("tabla").rows[cuenta].cells[3].textContent = "Diferencia";
    document.getElementById("tabla").rows[cuenta].cells[0].textContent = "Período";
    cuenta = cuenta + 1

    var totimp = 0
    var totimpA = 0
    var totDif = 0

    if (nro < nFin) {
        // nro=nro+1;
        do {
	    if (cuenta>1) {

            importe = importe * coeficienteMovilidad[nro];
            importeA = importeA * coeficienteMovilidad[nro];
		}		
            dif = importeA - importe
            if (nro == 194) {
                importe = importe + 1500;
                importeA = importeA + 1500;
            }
            document.getElementById("tabla").rows[cuenta].cells[1].textContent = importe.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[2].textContent = importeA.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[3].textContent = dif.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[0].textContent = nPer[nro].substring(4, 6) + "-" + nPer[nro].substring(0, 4);

            var totimp = totimp + importe
            var totimpA = totimpA + importeA
            var totDif = totDif + dif

            liq.push(importe.toFixed(2));
            nro = nro + 1;
            cuenta = cuenta + 1;
        }
        while (nro < nFin + 1);
    }
    // ESCRIBO LOS TOTALES
    document.getElementById("tabla").rows[cuenta].cells[1].textContent = totimp.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[2].textContent = totimpA.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[3].textContent = totDif.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[0].textContent = "TOTALES";
    // window.scroll(0, 150)
    console.log(liq);
    // window.open("tabla.html")
    // loadLiquidación();
}

function loadLiquidación() {

    liq.forEach(element => {

        var tableRef = document.getElementById('progresión').getElementsByTagName('tbody')[0];

        // Insert a row in the table at the last row
        var newRow = tableRef.insertRow();

        // Insert a cell in the row at index 0
        var newCell1 = newRow.insertCell(0);
        var newCell2 = newRow.insertCell(1);

        // Append a text node to the cell
        var newText1 = document.createTextNode(element);
        newCell1.appendChild(newText1);

        var newText2 = document.createTextNode(element);
        newCell2.appendChild(newText2);

    });
}
function exportTablaAjustesAExcel() {
    liquidarTabla(document.getElementById('mesDesdeA').value, document.getElementById('añoDesdeA').value, document.getElementById('mesHastaA').value, document.getElementById('añoHastaA').value, document.getElementById('montoA').value, document.getElementById('montoAjustado').value);
    exportTableToExcel('tabla');
}

function exportTableToExcel(tableID, filename = '') {
    // liquidarTabla(document.getElementById('mesDesdeA').value,document.getElementById('añoDesdeA').value,document.getElementById('mesHastaA').value,document.getElementById('añoHastaA').value,document.getElementById('montoA').value,document.getElementById('montoAjustado').value);
    var downloadLink;
    var dataType = 'application/vnd.ms-excel';
    var tableSelect = document.getElementById(tableID);
    var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

    // Specify file name
    filename = filename ? filename + '.xls' : 'excel_data.xls';

    // Create download link element
    downloadLink = document.createElement("a");

    document.body.appendChild(downloadLink);

    if (navigator.msSaveOrOpenBlob) {
        var blob = new Blob(['ufeff', tableHTML], {
            type: dataType
        });
        navigator.msSaveOrOpenBlob(blob, filename);
    } else {
        // Create a link to the file
        downloadLink.href = 'data:' + dataType + ', ' + tableHTML;

        // Setting the file name
        downloadLink.download = filename;

        //triggering the function
        downloadLink.click();
    }
}

//FUNCIONES DE MAGISTRADOS

function cCC() {
    var tipeado = document.getElementById("cC").value
    document.getElementById("elegirPorDescCargo").value = tipeado
}

function eligeXCargo() {
    var tipeado = document.getElementById("elegirPorDescCargo").value
    document.getElementById("cC").value = tipeado
}

function formatoExpediente() {
    var ingreso = document.getElementById("expediente").value;
    if (ingreso.length == 3 || ingreso.length == 6 || ingreso.length == 15 || ingreso.length == 17 || ingreso.length == 21) {
        document.getElementById("expediente").value = ingreso + "-";
    }
}

function formatoCóidgoCargo() {
    var ingreso = document.getElementById("cC").value;
    if (ingreso.length == 2) {
        document.getElementById("cC").value = ingreso + "-";
    }
}

function autoTab(campoActual, largo, siguienteCampo) {
    if (document.getElementById(campoActual).value.length == largo) {
        document.getElementById(siguienteCampo).focus();
    }
}

function confirmaImporte(concepto, nPer, cargo) {
    var item = tablaMagis[cargo] + "-" + concepto;
    var importe = tablaCombinadaMagis[item];
    var number = nPerMagistrados.indexOf(nPer) + 1;
    var cont = 0;

    do {
        importe = importe * coeficientesMagistrados[cont];
        cont = cont + 1;
    }
    while (number > cont);
    // number=new Intl.NumberFormat("de-DE").format(importe.toFixed(2));
    document.getElementById('importeMagis').value = importe.toFixed(2);
}

function hacerMagia(concepto) {
    document.getElementById("conceptoAnses").value = equivalenciaConceptos[concepto];
    document.getElementById("descConcepto").value = descConcepto[concepto];
    confirmaImporte(document.getElementById('conceptoRecibo').value, document.getElementById('año').value + document.getElementById('mes').value + '01', document.getElementById('cC').value)
    document.getElementById('okCargaConcepto').focus()
}

// carga los conceptos en la tabla
function agregaConceptos(código, descripción, concepto, monto, porcentaje) {

    var tableRef = document.getElementById('detalleLiquidación').getElementsByTagName('tbody')[0];
    // Agrego una fila
    var newRow = tableRef.insertRow();

    // Insert a cell in the row at index 0
    var newCell1 = newRow.insertCell(0);
    var newCell2 = newRow.insertCell(1);
    var newCell3 = newRow.insertCell(2);
    var newCell4 = newRow.insertCell(3);
    var newCell5 = newRow.insertCell(4);
    // Append a text node to the cell
    var newText1 = document.createTextNode(código);
    newCell1.appendChild(newText1);

    var newText2 = document.createTextNode(descripción);
    newCell2.appendChild(newText2);

    var newText3 = document.createTextNode(concepto);
    newCell3.appendChild(newText3);

    var newText4 = document.createTextNode(monto);
    newCell4.appendChild(newText4);

    var newText5 = document.createTextNode(porcentaje.toFixed(2));
    newCell5.appendChild(newText5);

    document.getElementById('conceptoRecibo').value = ""
    document.getElementById('conceptoAnses').value = ""
    document.getElementById('importeMagis').value = ""
    document.getElementById('descConcepto').value = ""
    document.getElementById('conceptoRecibo').focus()
    counter = counter + 1
    window.scroll(0, 45500)
}
//-----------------------------------------------------------------------
function liquidarTablaMagis(mes, año, mHasta, aHasta) {

    var fechaDesde = año + mes + "01"
    var fechaHasta = aHasta + mHasta + "01"
    var nro = nPerMagistrados.indexOf(fechaDesde)
    var nFin = nPerMagistrados.indexOf(fechaHasta)
    var cantFilas = nFin - nro + 3


    // Obtenemos la referencia del elemento body
    var body = document.getElementById("tablaLiqMagis");
    // Creamos un elemento <table> y un elemento <tbody>
    var tabla = document.createElement("table");
    var tblBody = document.createElement("tbody");



    // Creamos las celdas
    for (var i = 0; i < cantFilas; i++) {
        // Creamos las hileras de la tabla
        var fila = document.createElement("tr");
        for (var j = 0; j < counter + 3; j++) {
            // Crea un elemento <td> y un nodo de texto, hace que el nodo de
            // texto sea el contenido de <td>, ubica el elemento <td> al final
            // de la hilera de la tabla
            var celda = document.createElement("td");
            var textoCelda = document.createTextNode(i + " - " + j);
            celda.appendChild(textoCelda);
            fila.appendChild(celda);
        }
        // agregamos la hilera al final de la tabla (al final del elemento tblbody)
        tblBody.appendChild(fila);
    }
    // posicionamos el <tbody> debajo del elemento <table>
    tabla.appendChild(tblBody);
    // appends <table> into <body>
    body.appendChild(tabla);
    // modifica el atributo "border" de la tabla y lo fija a "2";
    tabla.setAttribute("border", 2);
    tabla.setAttribute("id", "tabla");
    // tabla.setAttribute("text-align:right");

    var result = document.getElementById("resultado");
    // result.appendChild(tabla);

    // pongo los títulos
    var cuenta = 0
    var columnas = 0
    do {
        document.getElementById("tabla").rows[0].cells[columnas + 1].textContent = document.getElementById('detalleLiquidación').rows[cuenta + 1].cells[2].textContent;
        cuenta = cuenta + 1
        columnas = columnas + 1
    } while (counter > columnas);
    document.getElementById("tabla").rows[0].cells[counter + 1].textContent = "Total";
    document.getElementById("tabla").rows[0].cells[counter + 2].textContent = "Obra Social";
    document.getElementById("tabla").rows[0].cells[0].textContent = "Período";

    //primer fila de conceptos proporcionados
    cuenta = 1
    columnas = 0
    var total = 0
    do {
        monto = document.getElementById('detalleLiquidación').rows[cuenta].cells[4].textContent / 30 * (31 - document.getElementById('día').value);
        document.getElementById("tabla").rows[1].cells[columnas + 1].textContent = monto.toFixed(2);
        total = total + monto
        cuenta = cuenta + 1
        columnas = columnas + 1
    } while (counter > columnas);
    document.getElementById("tabla").rows[1].cells[counter + 1].textContent = total.toFixed(2);
    var per = document.getElementById('año').value + document.getElementById('mes').value + '01'
    var nroPer = nPer.indexOf(per)
    var OS = parseInt(haberMin[nroPer]) / 30 * (31 - document.getElementById('día').value) * 0.03 + (total - parseInt(haberMin[nroPer])) * 0.06;
    document.getElementById("tabla").rows[1].cells[counter + 2].textContent = OS.toFixed(2);
    document.getElementById("tabla").rows[1].cells[0].textContent = document.getElementById('día').value + '/' + document.getElementById('mes').value + '/' + document.getElementById('año').value;

    //segunda fila
    nroPer = nroPer + 1 //número de período
    per = nPer[nroPer] //perído (20200101)
    cuenta = 1;
    columnas = 0;
    total = 0;

    fila = 2
    var nro = nPerMagistrados.indexOf(per)
    columnas = 0
    do {
        monto = document.getElementById('detalleLiquidación').rows[cuenta].cells[4].textContent * coeficientesMagistrados[nro];
        document.getElementById("tabla").rows[fila].cells[columnas + 1].textContent = monto.toFixed(2);
        total = total + monto
        cuenta = cuenta + 1
        columnas = columnas + 1

    } while (counter > columnas);
    OS = parseInt(haberMin[nroPer]) * 0.03 + (total - parseInt(haberMin[nroPer])) * 0.06;
    document.getElementById("tabla").rows[fila].cells[counter + 2].textContent = OS.toFixed(2);
    document.getElementById("tabla").rows[fila].cells[counter + 1].textContent = total.toFixed(2);
    document.getElementById("tabla").rows[fila].cells[0].textContent = '01/' + per.substring(4, 6) + '/' + per.substring(0, 4);

    //loop para el resto
    total = 0
    do {

        do {
            document.getElementById("tabla").rows[fila].cells[columnas + 1].textContent = (document.getElementById("tabla").rows[fila - 1].cells[columnas + 1].textContent * coeficientesMagistrados[nro]).toFixed(2);
            total = total + document.getElementById("tabla").rows[fila - 1].cells[columnas + 1].textContent * coeficientesMagistrados[nro]
            columnas = columnas + 1

        } while (counter > columnas)
        OS = parseInt(haberMin[nroPer]) * 0.03 + (total - parseInt(haberMin[nroPer])) * 0.06;
        document.getElementById("tabla").rows[fila].cells[counter + 2].textContent = OS.toFixed(2);
        document.getElementById("tabla").rows[fila].cells[counter + 1].textContent = total.toFixed(2);
        document.getElementById("tabla").rows[fila].cells[0].textContent = '01/' + per.substring(4, 6) + '/' + per.substring(0, 4);

        nro = nro + 1
        fila = fila + 1
        columnas = 0
        nroPer = nroPer + 1
        per = nPer[nroPer]
        total = 0
    } while (fila < cantFilas - 1)

    // ultima fila totales
    total = 0
    columnas = 1
    document.getElementById("tabla").rows[cantFilas - 1].cells[0].textContent = "Totales";
    do {
        total = 0;
        for (var i = 1; i < cantFilas - 1; i++) {
            total = total + parseFloat(document.getElementById("tabla").rows[i].cells[columnas].textContent);
        }
        document.getElementById("tabla").rows[cantFilas - 1].cells[columnas].textContent = total.toFixed(2);
        columnas = columnas + 1;
    } while (counter > columnas - 3)
}

//ASISTENTE OTRA VEZ----------------------------------------
function deFebAMar(pbu, pc, pap) {
    pbu = document.getElementById('PBU').value
    pc = document.getElementById('PC').value
    pap = document.getElementById('PAP').value
    supl = 0
    var nroPeríodo = 193
    var porcent = document.getElementById("porcBenef").value
    var f = 2
    document.getElementById("tablaMov2020").rows[1].cells[1].textContent = pbu
    document.getElementById("tablaMov2020").rows[1].cells[2].textContent = pc
    document.getElementById("tablaMov2020").rows[1].cells[3].textContent = pap

    nroPeríodo += 1
    //escribo marzo
    pbu = pbu * coeficienteMovilidad[nroPeríodo]
    pc = pc * coeficienteMovilidad[nroPeríodo]
    pap = pap * coeficienteMovilidad[nroPeríodo]
    supl = 1500 * porcent
    document.getElementById("tablaMov2020").rows[2].cells[4].textContent = supl
    document.getElementById("tablaMov2020").rows[f].cells[1].textContent = pbu.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[2].textContent = pc.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[3].textContent = pap.toFixed(2)
    nroPeríodo += 3
    f += 1
    //loop para el resto
    do {
        pbu = pbu * coeficienteMovilidad[nroPeríodo]
        pc = pc * coeficienteMovilidad[nroPeríodo]
        pap = pap * coeficienteMovilidad[nroPeríodo]
        supl = supl * coeficienteMovilidad[nroPeríodo]

        document.getElementById("tablaMov2020").rows[f].cells[1].textContent = pbu.toFixed(2)
        document.getElementById("tablaMov2020").rows[f].cells[2].textContent = pc.toFixed(2)
        document.getElementById("tablaMov2020").rows[f].cells[3].textContent = pap.toFixed(2)
        document.getElementById("tablaMov2020").rows[f].cells[4].textContent = supl.toFixed(2)

        nroPeríodo = nroPeríodo + 3
        f = f + 1

    } while (f < 6);
    //SOLO PBU
    if (pc == 0) {
        if (pap == 0) {

            pbu = pbu + supl
            pbu = pbu * coeficienteMovilidad[nroPeríodo]
            supl = 0

            //PBU Y PAP
        } else {
            console.log("PBU y PAP")
            if (pbu >= 8144 * porcent) {
                pap = pap + supl
                pbu = pbu * coeficienteMovilidad[nroPeríodo]
                pap = pap * coeficienteMovilidad[nroPeríodo]
                supl = 0

            } else {
                suplEntero = 1796.35
                cpbu = (pbu / 8144.14).toFixed(2)
                difPbu = 563.64
                difPcPap = 1233.10 * porcent
                aRepartir = suplEntero * porcent - difPbu * cpbu
                pbu = pbu + (difPbu * cpbu)
                pap = pap + aRepartir
                pbu = pbu * coeficienteMovilidad[nroPeríodo]
                pap = pap * coeficienteMovilidad[nroPeríodo]
                supl = 0
            }
        }
        //PBU Y PC
    } else {
        if (pap == 0) {
            console.log("PBU y PC")
            if (pbu >= 8144 * porcent) {
                pc = pc + supl
                pbu = pbu * coeficienteMovilidad[nroPeríodo]
                pc = pc * coeficienteMovilidad[nroPeríodo]
                supl = 0

            } else {
                suplEntero = 1796.35
                cpbu = (pbu / 8144.14).toFixed(2)
                difPbu = 563.64
                difPcPap = 1233.10 * porcent
                aRepartir = suplEntero * porcent - difPbu * cpbu
                pbu = pbu + (difPbu * cpbu)
                pc = pc + aRepartir
                pbu = pbu * coeficienteMovilidad[nroPeríodo]
                pc = pc * coeficienteMovilidad[nroPeríodo]
                supl = 0
            }
            //PBU-PC-PAP
        } else {
            var pcPap = pc + pap
            var partPc = pc / pcPap
            var partPap = pap / pcPap
            if (pbu >= 8144 * porcent) {
                pc = pc + supl * partPc
                pap = pap + supl * partPap
                supl = 0
                pbu = pbu * coeficienteMovilidad[nroPeríodo]
                pc = pc * coeficienteMovilidad[nroPeríodo]
                pap = pap * coeficienteMovilidad[nroPeríodo]
            } else {
                suplEntero = 1796.35
                cpbu = (pbu / 8144.14).toFixed(2)
                difPbu = 563.64
                difPcPap = 1233.10 * porcent
                aRepartir = suplEntero * porcent - difPbu * cpbu
                pbu = pbu + (difPbu * cpbu)
                pc = pc + aRepartir * partPc
                pap = pap + aRepartir * partPap

                pbu = pbu * coeficienteMovilidad[nroPeríodo]
                pc = pc * coeficienteMovilidad[nroPeríodo]
                pap = pap * coeficienteMovilidad[nroPeríodo]
                supl = 0
            }

        }
    }
    //ESCRIBO RESULTADOS MZO Y ABRIL
    document.getElementById("tablaMov2020").rows[f].cells[1].textContent = pbu.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[2].textContent = pc.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[3].textContent = pap.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[4].textContent = supl.toFixed(2)
    f += 1
    document.getElementById("tablaMov2020").rows[f].cells[1].textContent = pbu.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[2].textContent = pc.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[3].textContent = pap.toFixed(2)
    document.getElementById("tablaMov2020").rows[f].cells[4].textContent = supl.toFixed(2)

}

function pensiones(cony, hijos) {
    cony = document.getElementById("cónyuges").value
    hijos = document.getElementById("hijos").value
    var cómputo = 0
    var bCony = 0
    var bHijos = 0
    console.log(cony)

    if (cony == "0") {
        switch (hijos) {
            case "1":
                cómputo = 70
                bCony = 0
                bHijos = 100
                break;
            case "2":
                cómputo = 90
                bCony = 0
                bHijos = 50
                break;
            case "3":
                cómputo = 100
                bCony = 0
                bHijos = 33.33
                break;
            case "4":
                cómputo = 100
                bCony = 0
                bHijos = 25
                break;
            case "5":
                cómputo = 100
                bCony = 0
                bHijos = 20
                break;
            case "6":
                cómputo = 100
                bCony = 0
                bHijos = 16.67
                break;
            case "7":
                cómputo = 100
                bCony = 0
                bHijos = 14.29
                break;
            case "8":
                cómputo = 100
                bCony = 0
                bHijos = 12.50
                break;
            case "9":
                cómputo = 100
                bCony = 0
                bHijos = 11.11
                break;
            case "10":
                cómputo = 100
                bCony = 0
                bHijos = 10
                break;

            default:
                break;

        }
    } else if (cony == "1") {
        switch (hijos) {
            case "0":
                cómputo = 70
                bCony = 100
                bHijos = 0
                break;
            case "1":
                cómputo = 70
                bCony = 71.43
                bHijos = 28.57
                break;
            case "2":
                cómputo = 90
                bCony = 55.56
                bHijos = 22.22
                break;
            case "3":
                cómputo = 100
                bCony = 45.46
                bHijos = 18.18
                break;
            case "4":
                cómputo = 100
                bCony = 38.48
                bHijos = 15.38
                break;
            case "5":
                cómputo = 100
                bCony = 33.35
                bHijos = 13.33
                break;
            case "6":
                cómputo = 100
                bCony = 29.44
                bHijos = 11.76
                break;
            case "7":
                cómputo = 100
                bCony = 26.29
                bHijos = 10.53
                break;
            case "8":
                cómputo = 100
                bCony = 23.84
                bHijos = 9.52
                break;
            case "9":
                cómputo = 100
                bCony = 21.70
                bHijos = 8.70
                break;
            case "10":
                cómputo = 100
                bCony = 20
                bHijos = 8
                break;

            default:
                break;

        }

    }
    else if (cony == "2") {
        switch (hijos) {
            case "0":
                cómputo = 70
                bCony = 50
                bHijos = 0
                break;
            case "1":
                cómputo = 70
                bCony = 35.71
                bHijos = 28.57
                break;
            case "2":
                cómputo = 90
                bCony = 27.78
                bHijos = 22.22
                break;
            case "3":
                cómputo = 100
                bCony = 22.73
                bHijos = 18.18
                break;
            case "4":
                cómputo = 100
                bCony = 19.24
                bHijos = 15.38
                break;
            case "5":
                cómputo = 100
                bCony = 16.68
                bHijos = 13.33
                break;
            case "6":
                cómputo = 100
                bCony = 29.44
                bHijos = 14.72
                break;
            case "7":
                cómputo = 100
                bCony = 13.15
                bHijos = 10.53
                break;
            case "8":
                cómputo = 100
                bCony = 11.92
                bHijos = 9.52
                break;
            case "9":
                cómputo = 100
                bCony = 10.85
                bHijos = 8.70
                break;
            case "10":
                cómputo = 100
                bCony = 10
                bHijos = 8
                break;

            default:
                break;

        }
    }

    document.getElementById("resPorcComp").value = cómputo + "%"
    document.getElementById("resCónyuges").value = bCony + "%"
    document.getElementById("resHijos").value = bHijos + "%"
    console.log(cony)
    console.log(hijos)
}

//CÁLCULOS DE RH----------------------------------------
let actJubi = ['1,6542', '1,6459', '1,6357', '1,6025', '1,5992', '1,6158', '1,5821', '1,583', '1,5863', '1,5868', '1,5902', '1,6088', '1,5996', '1,6059', '1,6141', '1,6234', '1,6351', '1,653', '1,669', '1,6917', '1,7221', '1,7427', '1,7496', '1,7628', '1,7587', '1,7441', '1,7398', '1,7401', '1,7269', '1,7254', '1,7114', '1,7032', '1,6964', '1,6905', '1,6868', '1,6862', '1,6922', '1,6997', '1,6941', '1,6844', '1,6712', '1,6423', '1,5873', '1,5866', '1,5945', '1,5968', '1,6088', '1,6011', '1,6154', '1,6141', '1,6266', '1,6184', '1,6057', '1,5749', '1,5152', '1,5096', '1,5091', '1,4989', '1,5007', '1,5354', '1,5232', '1,4769', '1,4598', '1,4632', '1,4392', '1,3674', '1,2997', '1,265', '1,2207', '1,1993', '1,1838', '1,1735', '1,1595', '1,1478', '1,1382', '1,1291', '1,1213', '1,1139', '1,1069', '1,1008', '1,0946', '1,0867', '1,0807', '1,0763', '1,0704', '1,0657', '1,0613', '1,0571', '1,0531', '1,0491', '1,0454', '1,0431', '1,0391', '1,0364', '1,0339', '1,0311', '1,0385', '1,0281', '1,0281', '1,0302', '1,0258', '1,027', '1,0191', '1,02', '1,0192', '1,0172', '1,0152', '1,0216', '1,0304', '1,0488', '1,0819', '1,1212', '1,1327', '1,1537', '1,1788', '1,2055', '1,216', '1,21', '1,1964', '1,2074', '1,1914', '1,1865', '1,1833', '1,1867', '1,1871', '1,1987', '1,1962', '1,1954', '1,2061', '1,2503', '1,2638', '1,2895', '1,3247', '1,3718', '1,397', '1,4451', '1,4555', '1,4569', '1,4707', '1,4874', '1,5189', '1,5389', '1,5731', '1,5945', '1,6174', '1,6414', '1,6492', '1,6823', '1,6838', '1,7091', '1,7239', '1,752', '1,7812', '1,8247', '1,8311', '1,8304', '1,8806', '1,9158', '1,9111', '1,9724', '1,9635', '1,9746', '1,9718', '2,0387', '2,0841', '2,2101', '1,3519', '1,3578', '1,3545', '1,351', '1,3474', '1,3439', '1,3405', '1,3371', '1,334', '1,3307', '1,3274', '1,3243', '1,321', '1,3177', '1,3145', '1,3112', '1,3079', '1,3045', '1,3012', '1,2978', '1,2944', '1,291', '1,2874', '1,284', '1,2802', '1,2766', '1,2733', '1,2696', '1,2658', '1,2622', '1,2585', '1,2547', '1,251', '1,2473', '1,2436', '1,24', '1,2363', '1,2324', '1,2286', '1,2246', '1,2204', '1,2163', '1,2122', '1,2079', '1,2034', '1,199', '1,1947', '1,1904', '1,1859', '1,1814', '1,1766', '1,1724', '1,1677', '1,1631', '1,1586', '1,1538', '1,1491', '1,1439', '1,1387', '1,1335', '1,1282', '1,1227', '1,1174', '1,1124', '1,1077', '1,1036', '1,1001', '1,0968', '1,0937', '1,091', '1,0888', '1,0866', '1,0844', '1,0819', '1,0795', '1,0769', '1,0741', '1,0713', '1,0682', '1,0649', '1,0615', '1,0578', '1,0538', '1,0497', '1,0461', '1,0425', '1,039', '1,0358', '1,0331', '1,0306', '1,0285', '1,0264', '1,024', '1,0216', '1,0193', '1,0171', '1,015', '1,0131', '1,0113', '1,0096']

let actRTI = ['1,5154', '1,5105', '1,5363', '1,5752', '1,5866', '1,5541', '1,4951', '1,4626', '1,3973', '1,3662', '1,3429', '1,334', '1,3047', '1,2851', '1,2687', '1,253', '1,2395', '1,2301', '1,2156', '1,2004', '1,1884', '1,1737', '1,1628', '1,1587', '1,1425', '1,1347', '1,1287', '1,1211', '1,1069', '1,1055', '1,0917', '1,0846', '1,0776', '1,0719', '1,0669', '1,0648', '1,0577', '1,0537', '1,0502', '1,047', '1,0432', '1,0413', '1,0378', '1,0348', '1,0324', '1,0294', '1,0269', '1,0283', '1,0224', '1,0203', '1,0184', '1,0165', '1,0147', '1,0146', '1,0116', '1,0107', '1,0092', '1,0073', '1,006', '1,006', '1,0035', '1,0022', '1,0015', '1,0011', '1,0006', '1,0009', '1,0003', '1,0013', '1,0004', '1', '1,0001', '1,006', '1,0003', '1,0003', '1,0003', '1,0002', '1,0001', '1,0008', '1,0014', '1,003', '1,003', '1,0008', '1,0004', '1,002', '1,0003', '1,0002', '1,0001', '1,0003', '1,0001', '1', '1,0002', '1,0027', '1,0011', '1,0011', '1,0011', '1,0001', '1,0192', '1,0024', '1,0063', '1,0139', '1,0085', '1,0139', '1,0012', '1,0056', '1,0067', '1,0051', '1,0034', '1,0183', '1,0353', '1,0601', '1,0936', '1,1332', '1,1443', '1,1647', '1,1893', '1,2149', '1,224', '1,2165', '1,2013', '1,2103', '1,1931', '1,1866', '1,1814', '1,1825', '1,1807', '1,1897', '1,1849', '1,1814', '1,1896', '1,2305', '1,2405', '1,2624', '1,2934', '1,3356', '1,3557', '1,3978', '1,4026', '1,3986', '1,4062', '1,4166', '1,4408', '1,4538', '1,4796', '1,4928', '1,507', '1,5216', '1,5208', '1,5428', '1,5355', '1,5498', '1,5537', '1,5694', '1,5861', '1,6147', '1,61', '1,5987', '1,631', '1,651', '1,6353', '1,6758', '1,6561', '1,6531', '1,6382', '1,6798', '1,7029', '1,7902', '1,1819', '1,1806', '1,1715', '1,163', '1,1551', '1,1482', '1,1424', '1,1369', '1,132', '1,1278', '1,1242', '1,1209', '1,1175', '1,1137', '1,1102', '1,1062', '1,1024', '1,0983', '1,0938', '1,0891', '1,0842', '1,0789', '1,0729', '1,0672', '1,0621', '1,0571', '1,0522', '1,0478', '1,0441', '1,0406', '1,0377', '1,0348', '1,0316', '1,0284', '1,0252', '1,0223', '1,0196', '1,0171', '1,0147', '1,0125', '1,0104', '1,0082', '1,0063', '1,0041', '1,0022', '1,0002', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']

let perActRh = ['199407', '199408', '199409', '199410', '199411', '199412', '199501', '199502', '199503', '199504', '199505', '199506', '199507', '199508', '199509', '199510', '199511', '199512', '199601', '199602', '199603', '199604', '199605', '199606', '199607', '199608', '199609', '199610', '199611', '199612', '199701', '199702', '199703', '199704', '199705', '199706', '199707', '199708', '199709', '199710', '199711', '199712', '199801', '199802', '199803', '199804', '199805', '199806', '199807', '199808', '199809', '199810', '199811', '199812', '199901', '199902', '199903', '199904', '199905', '199906', '199907', '199908', '199909', '199910', '199911', '199912', '200001', '200002', '200003', '200004', '200005', '200006', '200007', '200008', '200009', '200010', '200011', '200012', '200101', '200102', '200103', '200104', '200105', '200106', '200107', '200108', '200109', '200110', '200111', '200112', '200201', '200202', '200203', '200204', '200205', '200206', '200207', '200208', '200209', '200210', '200211', '200212', '200301', '200302', '200303', '200304', '200305', '200306', '200307', '200308', '200309', '200310', '200311', '200312', '200401', '200402', '200403', '200404', '200405', '200406', '200407', '200408', '200409', '200410', '200411', '200412', '200501', '200502', '200503', '200504', '200505', '200506', '200507', '200508', '200509', '200510', '200511', '200512', '200601', '200602', '200603', '200604', '200605', '200606', '200607', '200608', '200609', '200610', '200611', '200612', '200701', '200702', '200703', '200704', '200705', '200706', '200707', '200708', '200709', '200710', '200711', '200712', '200801', '200802', '200803', '200804', '200805', '200806', '200807', '200808', '200809', '200810', '200811', '200812', '200901', '200902', '200903', '200904', '200905', '200906', '200907', '200908', '200909', '200910', '200911', '200912', '201001', '201002', '201003', '201004', '201005', '201006', '201007', '201008', '201009', '201010', '201011', '201012', '201101', '201102', '201103', '201104', '201105', '201106', '201107', '201108', '201109', '201110', '201111', '201112', '201201', '201202', '201203', '201204', '201205', '201206', '201207', '201208', '201209', '201210', '201211', '201212', '201301', '201302', '201303', '201304', '201305', '201306', '201307', '201308', '201309', '201310', '201311', '201312', '201401', '201402', '201403', '201404', '201405', '201406', '201407', '201408', '201409', '201410', '201411', '201412', '201501', '201502', '201503', '201504', '201505', '201506', '201507', '201508', '201509', '201510', '201511', '201512', '201601', '201602', '201603', '201604', '201605', '201606', '201607', '201608']

let coefBadaro = [' 99.738563836197', ' 99.6447069467365', ' 99.57493056029', ' 99.521652071896', ' 99.5582464263307', ' 99.6736686327938', ' 105.896282880488', ' 106.49035339555', ' 106.679334780159', ' 106.718544447437', ' 107.279260512083', ' 107.588871899924', ' 111.073634083029', ' 111.411709326321', ' 111.507635837392', ' 111.92818555192', ' 115.211648390973', ' 115.845958282536', ' 116.547957147038', ' 117.477747237203', ' 118.459051264828', ' 119.421717684007', ' 119.838573719716', ' 120.575678417608', ' 123.722026928731', ' 125.83525878065', ' 126.951354550322', ' 127.544336686724', ' 127.915813239789', ' 128.132343520861', ' 128.963212991528', ' 130.095255961679', ' 130.518752408864', ' 130.673297172261', ' 131.200322760844', ' 131.815230670843', ' 136.650986170692', ' 139.459156307887', ' 140.391959899524', ' 142.211253416816', ' 144.388233018647', ' 145.656157110774', ' 148.044542502433', ' 150.30304036426', ' 153.101495194978', ' 155.251467586506', ' 156.773837988318', ' 158.593441898788', ' 161.265876097912', ' 162.795189294231', ' 164.186831100824', ' 166.852066180752', ' 169.40747414157', ' 171.48433171783', ' 174.734766275789', ' 177.346560661856', ' 180.828214908106', ' 184.094264045209', ' 186.627907436629', ' 188.558998569077', ' 191.005811972083']

function badaroPuro(haber) {
    var h = haber
    var porc = document.getElementById("porcBenef").value
    var porc2 = document.getElementById("porcBenef2").value
    resultado = h * porc * porc2 * 19.908886958248

    document.getElementById("res082016").value = resultado.toFixed(2)

}

function actualizarPrestación(fad, pComp, pBen, pbu, pc, pap) {

    fad = document.getElementById("FAD").value
    var nroA = perActRh.indexOf(fad)
    if (document.getElementById("prestación").value == "Jubi") {
        document.getElementById("coef").value = actJubi[nroA];
	if (perActRh.indexOf(document.getElementById("FAD").value) > 155) {
	document.getElementById("cbox1").checked=false
	} else {
	document.getElementById("cbox1").checked=true
	}
    } else {
        document.getElementById("coef").value = actRTI[nroA];
	if (perActRh.indexOf(document.getElementById("FAD").value) > 155) {
	document.getElementById("cbox1").checked=false
	} else {
	document.getElementById("cbox1").checked=true
	} 
    }

    console.log(Number(actJubi[nroA].replace(",", ".")) + 1);
  	

}

function nvoHaberFad(pbu, pc, pap, pComp, pBen, coeficiente) {
    pbu = document.getElementById("pbu").value
    pc = document.getElementById("pc").value
    pap = document.getElementById("pap").value
    pComp = Number(document.getElementById("porcBenef3").value)
    pBen = Number(document.getElementById("porcBenef4").value)
    coeficiente = Number(document.getElementById("coef").value.replace(",", "."))
    h2007=0

    document.getElementById("npbu").value = pbu * pComp
    document.getElementById("npc").value = (pc * pComp * pBen * coeficiente).toFixed(2)
    if (document.getElementById("cbox1").checked==false) {
        document.getElementById("npap").value = (pap * pComp * pBen * coeficiente).toFixed(2)

    } else {
        document.getElementById("npap").value = (pap / 0.85 * 1.5 * pComp * pBen * coeficiente).toFixed(2)
		
    }
    document.getElementById("nHFad").value = (Number(document.getElementById("npbu").value) + Number(document.getElementById("npc").value) + Number(document.getElementById("npap").value)).toFixed(2)

	if (perActRh.indexOf(document.getElementById("FAD").value) < 150) {

    h2007=badaroProporcional(document.getElementById("nHFad").value,document.getElementById("FAD").value)

    document.getElementById("r082016").value=Calcular('12','2006','08','2016',h2007)
	} else {
	
	h2007=document.getElementById("nHFad").value
	document.getElementById("r082016").value=Calcular(document.getElementById("FAD").value.slice(4,6),document.getElementById("FAD").value.slice(0,4),'08','2016',h2007)
	}
}

function badaroProporcional(haber, período) {
    resBadaro = 0
    nCoefBadaro = 0
    nCoefBadaro = perActRh.indexOf(período) - 90
    if (perActRh.indexOf(período) < 90) {
        resBadaro = haber * 1.885589771
    } else {
        switch (período.slice(0, 4)) {
            case '2002':
                resBadaro = haber * (107.589 / Number(coefBadaro[nCoefBadaro])) * 1.752588136
                break;
            case '2003':
                if (período.slice(4, 6) == "01") {
                    resBadaro = haber * 1.752588136
                } else {
                    resBadaro = haber * (120.576 / Number(coefBadaro[nCoefBadaro])) * 1.563822695
                }
                break;
            case '2004':
                if (período.slice(4, 6) == "01") {
                    resBadaro = haber * 1.563822695
                } else {
                    resBadaro = haber * (131.815 / Number(coefBadaro[nCoefBadaro])) * 1.430479543
                }
                break;
            case '2005':
                if (período.slice(4, 6) == "01") {
                    resBadaro = haber * 1.430479543
                } else {
                    resBadaro = haber * (158.593 / Number(coefBadaro[nCoefBadaro])) * 1.1889457
                }
                break;
            case '2006':
                if (período.slice(4, 6) == "01") {
                    resBadaro = haber * 1.1889457
                } else {
                    resBadaro = haber * (188.559 / Number(coefBadaro[nCoefBadaro]))
                }

                break;
            default:
                break;
        }
    }
    return resBadaro

}

function final630(mhasta,ahasta,monto,monto2) {
    mhasta=document.getElementById("Omes").value
    ahasta=document.getElementById("Oaño").value
    monto=document.getElementById("r082016").value
    monto2=document.getElementById("perc082016").value

    document.getElementById("rRH").value=Calcular('08','2016',mhasta,ahasta,monto)
    document.getElementById("rSRH").value=Calcular('08','2016',mhasta,ahasta,monto2)

}

function liquidarTablaRH(mes, año, mHasta, aHasta, monto, montoA) {
    // window.open("tabla.html")
    // window.location.href='tabla.html'
    var fechaDesde = año + mes + "01"
    var fechaHasta = aHasta + mHasta + "01"
    var nro = nPer.indexOf(fechaDesde)
    var nFin = nPer.indexOf(fechaHasta)
    var cantFilas = nFin - nro + 3
    var importe = monto
    var importeA = montoA
    var dif = 0
    // let liq = Array()

    // Obtenemos la referencia del elemento body
    var body = document.getElementById("tablaLiq");
    // Creamos un elemento <table> y un elemento <tbody>
    var tabla = document.createElement("table");
    var tblBody = document.createElement("tbody");
	 tabla.setAttribute("class", "table is-bordered is-striped is-hoverable is-fullwidth");
	

    // Creamos las celdas
    for (var i = 0; i < cantFilas; i++) {
        // Creamos las hileras de la tabla
        var fila = document.createElement("tr");
        for (var j = 0; j < 4; j++) {
            // Crea un elemento <td> y un nodo de texto, hace que el nodo de
            // texto sea el contenido de <td>, ubica el elemento <td> al final
            // de la hilera de la tabla
            var celda = document.createElement("td");
            var textoCelda = document.createTextNode(i + " - " + j);
            celda.appendChild(textoCelda);
      

            fila.appendChild(celda);
        }
        // agregamos la hilera al final de la tabla (al final del elemento tblbody)
        tblBody.appendChild(fila);
    }
    // posicionamos el <tbody> debajo del elemento <table>
    tabla.appendChild(tblBody);
    // appends <table> into <body>
    body.appendChild(tabla);
    // modifica el atributo "border" de la tabla y lo fija a "2";
    //tabla.setAttribute("border", 2);
    tabla.setAttribute("id", "tabla");
    tabla.setAttribute("text-align", "right");

    var result = document.getElementById("resultado");
    // result.appendChild(tabla);

    // pongo los títulos
    var cuenta = 0
    document.getElementById("tabla").rows[cuenta].cells[1].textContent = "Percibido";
    document.getElementById("tabla").rows[cuenta].cells[2].textContent = "Haber Recompuesto";
    document.getElementById("tabla").rows[cuenta].cells[3].textContent = "001-020";
    document.getElementById("tabla").rows[cuenta].cells[0].textContent = "Período";
    cuenta = cuenta + 1

    var totimp = 0
    var totimpA = 0
    var totDif = 0

    if (nro < nFin) {
        // nro=nro+1;
        do {
            importe = importe * coeficienteMovilidad[nro];
            importeA = importeA * coeficienteMovilidad[nro];
            dif = importeA - importe
            if (nro == 194) {
                importe = importe + 1500;
                importeA = importeA + 1500;
            }
            document.getElementById("tabla").rows[cuenta].cells[1].textContent = importe.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[2].textContent = importeA.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[3].textContent = dif.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[0].textContent = nPer[nro].substring(4, 6) + "-" + nPer[nro].substring(0, 4);

            var totimp = totimp + importe
            var totimpA = totimpA + importeA
            var totDif = totDif + dif

            liq.push(importe.toFixed(2));
            nro = nro + 1;
            cuenta = cuenta + 1;
        }
        while (nro < nFin + 1);
    }
    // ESCRIBO LOS TOTALES
    document.getElementById("tabla").rows[cuenta].cells[1].textContent = totimp.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[2].textContent = totimpA.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[3].textContent = totDif.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[0].textContent = "TOTALES";
    // window.scroll(0, 150)
    console.log(liq);
    // window.open("tabla.html")
    // loadLiquidación();
}

function soloBadaro() {
	h2007=badaroProporcional(document.getElementById("impB").value,document.getElementById("FADB").value);
	document.getElementById("resB").value=Calcular('12','2006',document.getElementById("mesB").value, document.getElementById("añoB").value, h2007);
}

function leyAplic() {
document.getElementById("resLeyAplic").value=document.getElementById("leyAplic").value


}

function cajas18037() {
document.getElementById("coeficiente").value=coefCajas[document.getElementById("caja").value*1];
console.log(document.getElementById("coeficiente").value)
}

function L660() {
haber=document.getElementById('hCausante').value
pComp=document.getElementById('porcBenef').value
pBen=document.getElementById('porcBenef2').value
coef=document.getElementById('coeficiente').value
mes=document.getElementById('mes').value
año=document.getElementById('año').value

nhf=haber*pComp*pBen*coef
nh2016=nhf*19.908886958248

document.getElementById('nvoHFad').value=nhf.toFixed(2)
document.getElementById('res082016').value=nh2016.toFixed(2)

}

function diasHabiles(desde, hasta) {

dde=fechas.indexOf(desde)
hta=fechas.indexOf(hasta)
n=0
for (x=dde; x<hta;x++) {
if (diasH[x]=='H') {

	n=n+1
	}

}


return n
}

function dHabilesApp () {

desde=document.getElementById('desde').value.slice(0,4)+document.getElementById('desde').value.slice(5,7)+document.getElementById('desde').value.slice(8,10)
hasta=document.getElementById('hasta').value.slice(0,4)+document.getElementById('hasta').value.slice(5,7)+document.getElementById('hasta').value.slice(8,10)
return diasHabiles(desde,hasta)

}



function dias360(desde, hasta) {
    dDesde = Number(desde.slice(8, 10))
    mDesde = Number(desde.slice(5, 7))
    aDesde = Number(desde.slice(0, 4))

    dHasta = Number(hasta.slice(8, 10))
    mHasta = Number(hasta.slice(5, 7))
    aHasta = Number(hasta.slice(0, 4))

    n = 1
    if (dHasta==31) {
        dHasta=30
    }

	if (dHasta==28 && mHasta==02 ) {
        dHasta=30
    }

	
    nvaHasta = String(dHasta) + String(mHasta) + String(aHasta)

    do {
        nvaDesde = String(dDesde) + String(mDesde) + String(aDesde)

        if (nvaDesde == nvaHasta) {
            break;
        } else {
            if (dDesde == 30) {
                dDesde = 1;
                if (mDesde == 12) {
                    mDesde = 1;
                    aDesde = aDesde + 1;
                } else {
                    mDesde = mDesde + 1;
                }

            } else {
                dDesde = dDesde + 1
            }
        }
        n = n + 1;
        if (n > 250000) {
            break;
    }    
    
    
} while (nvaDesde != nvaHasta);


return (n)
}

function sicaAños (desde, hasta) {
    return (parseInt(dias360(desde,hasta)/360))
}

function sicaMeses (desde, hasta) {
    meses=dias360(desde,hasta)/360-parseInt(dias360(desde,hasta)/360)
    meses=parseInt(meses*360/30)
    return(meses)
}

function sicaDias (desde, hasta) {
    meses=dias360(desde,hasta)/360-parseInt(dias360(desde,hasta)/360)
    meses=meses*360/30
	if (meses-parseInt(meses)<0.001) {
	dias=0
} else {
    dias=parseInt((meses-parseInt(meses))*30)
	}
    return(dias)
}


function agregarPeríodos() {
var tableRef = document.getElementById('tablaSICA').getElementsByTagName('tbody')[0];

document.getElementById('totSICA').rows[document.getElementById('tipo').selectedIndex+1].hidden=false


// Agrego una fila
var newRow = tableRef.insertRow();

// Insert a cell in the row at index 0
var newCell1 = newRow.insertCell(0);
var newCell2 = newRow.insertCell(1);
var newCell3 = newRow.insertCell(2);
var newCell4 = newRow.insertCell(3);
var newCell5 = newRow.insertCell(4);
var newCell6 = newRow.insertCell(5);
var newCell7 = newRow.insertCell(6);

// Append a text node to the cell
var newText1 = document.createTextNode(document.getElementById("dde").value);
newCell1.appendChild(newText1);

var newText2 = document.createTextNode(document.getElementById("hta").value);
newCell2.appendChild(newText2);

var newText3 = document.createTextNode(sicaAños(document.getElementById("dde").value,document.getElementById("hta").value));
newCell3.appendChild(newText3);

var newText4 = document.createTextNode(sicaMeses(document.getElementById("dde").value,document.getElementById("hta").value));
newCell4.appendChild(newText4);

var newText5 = document.createTextNode(sicaDias(document.getElementById("dde").value,document.getElementById("hta").value));
newCell5.appendChild(newText5);

var newText6 = document.createTextNode(document.getElementById("tipo").value);
newCell6.appendChild(newText6);

newCell3.setAttribute("align","center");
newCell4.setAttribute("align","center");
newCell5.setAttribute("align","center");
newCell6.setAttribute("align","center");
newCell7.setAttribute("align","center");

cantFilas=tablaSICA.rows.length

var newText7 = document.createElement("input");
newText7.setAttribute("type","checkbox");
newText7.setAttribute("id","ck"+cantFilas);
newText7.setAttribute("onChange","totalPeríodos()");
newCell7.appendChild(newText7);


totDias=0
totMeses=0
totAños=0

for (x=1; x<cantFilas-1; x++) {
    totDias=totDias+parseInt(tablaSICA.rows[x].cells[4].textContent)
}

for (x=1; x<cantFilas-1; x++) {
    totMeses=totMeses+parseInt(tablaSICA.rows[x].cells[3].textContent)
}

for (x=1; x<cantFilas-1; x++) {
    totAños=totAños+parseInt(tablaSICA.rows[x].cells[2].textContent)
}

if (totDias>30) {
    totMeses=totMeses+parseInt(totDias/30)
    totDias=totDias%30

}
if (totMeses>12) {
    totAños=totAños+parseInt(totMeses/12)
    totMeses=totMeses%12

}

tablaSICA.rows[cantFilas-1].cells[4].textContent=totDias
tablaSICA.rows[cantFilas-1].cells[3].textContent=totMeses
tablaSICA.rows[cantFilas-1].cells[2].textContent=totAños

nombre="ck"+cantFilas
document.getElementById(nombre).checked=true



totPeríodos=totPeríodos+dias360(document.getElementById("dde").value,document.getElementById("hta").value);

switch (document.getElementById('tipo').selectedIndex) {
  case 0:
Comunes=Comunes+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 1:
Docente=Docente+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 2:
Investigador=Investigador+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 3:
Calorías=Calorías+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 4:
Otra_Caja=Otra_Caja+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 5:
PJN=PJN+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 6:
Cancillería=Cancillería+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 7:
Otros_A=Otros_A+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 8:
Otros_B=Otros_B+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
  case 9:
Otros_C=Otros_C+dias360(document.getElementById("dde").value,document.getElementById("hta").value);
break;
}

document.getElementById('totSICA').rows[1].cells[1].textContent=(Comunes/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[2].cells[1].textContent=(Docente/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[3].cells[1].textContent=(Investigador/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[4].cells[1].textContent=(Calorías/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[5].cells[1].textContent=(Otra_Caja/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[6].cells[1].textContent=(PJN/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[7].cells[1].textContent=(Cancillería/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[8].cells[1].textContent=(Otros_A/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[9].cells[1].textContent=(Otros_B/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[10].cells[1].textContent=(Otros_C/totPeríodos*100).toFixed(2)

document.getElementById('totSICA').rows[11].cells[1].textContent='100'

document.getElementById("dde").focus();


}

function totalPeríodos () {
cantFilas=tablaSICA.rows.length

totDias=0
totMeses=0
totAños=0

Comunes=0
Docente=0
Investigador=0
Calorías=0
Otra_Caja=0
PJN=0
Cancillería=0
Otros_A=0
Otros_B=0
Otros_C=0
totSICA=0

for (x=1; x<cantFilas-1; x++) {
	nombre="ck"+(x+2)
	
	if (document.getElementById(nombre).checked==true) {
    totDias=totDias+parseInt(tablaSICA.rows[x].cells[4].textContent)
}
}

for (x=1; x<cantFilas-1; x++) {
nombre="ck"+(x+2)
	
	if (document.getElementById(nombre).checked==true) {
    totMeses=totMeses+parseInt(tablaSICA.rows[x].cells[3].textContent)
}
}

for (x=1; x<cantFilas-1; x++) {
nombre="ck"+(x+2)
	
	if (document.getElementById(nombre).checked==true) {
    totAños=totAños+parseInt(tablaSICA.rows[x].cells[2].textContent)
}
}

if (totDias>30) {
    totMeses=totMeses+parseInt(totDias/30)
    totDias=totDias%30

}
if (totMeses>12) {
    totAños=totAños+parseInt(totMeses/12)
    totMeses=totMeses%12

}

tablaSICA.rows[cantFilas-1].cells[4].textContent=totDias
tablaSICA.rows[cantFilas-1].cells[3].textContent=totMeses
tablaSICA.rows[cantFilas-1].cells[2].textContent=totAños

totPeríodos=totPeríodos + totDias + totMeses *30 + totAños*36

Comunes=0
Docente=0
Investigador=0
Calorías=0
Otra_Caja=0
PJN=0
Cancillería=0
Otros_A=0
Otros_B=0
Otros_C=0
totPeríodos=0

for (x=1; x<cantFilas-1; x++) {

if (tablaSICA.rows[x].cells[5].textContent=="Comunes") {

nombre="ck"+(x+2)

	if (document.getElementById(nombre).checked==true) {

Comunes=Comunes + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {	
if (tablaSICA.rows[x].cells[5].textContent=="Docente") {	
nombre="ck"+(x+2)	
if (document.getElementById(nombre).checked==true) {
Docente=Docente + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);	
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}	
}	
}	

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="Investigador") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
Investigador=Investigador + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="Calorías") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
Calorías=Calorías + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="Otra_Caja") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
Otra_Caja=Otra_Caja + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="PJN") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
PJN=PJN + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="Cancillería") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
Cancillería=Cancillería + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="Otros_A") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
Otros_A=Otros_A + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="Otros_B") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
Otros_B=Otros_B + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}

for (x=1; x<cantFilas-1; x++) {
if (tablaSICA.rows[x].cells[5].textContent=="Otros_C") {
nombre="ck"+(x+2)
if (document.getElementById(nombre).checked==true) {
Otros_C=Otros_C + dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
totPeríodos=totPeríodos+dias360(tablaSICA.rows[x].cells[0].textContent,tablaSICA.rows[x].cells[1].textContent);
}
}
}





document.getElementById('totSICA').rows[1].cells[1].textContent=(Comunes/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[2].cells[1].textContent=(Docente/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[3].cells[1].textContent=(Investigador/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[4].cells[1].textContent=(Calorías/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[5].cells[1].textContent=(Otra_Caja/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[6].cells[1].textContent=(PJN/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[7].cells[1].textContent=(Cancillería/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[8].cells[1].textContent=(Otros_A/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[9].cells[1].textContent=(Otros_B/totPeríodos*100).toFixed(2)
document.getElementById('totSICA').rows[10].cells[1].textContent=(Otros_C/totPeríodos*100).toFixed(2)

document.getElementById('totSICA').rows[11].cells[1].textContent='100'

}


function convertirMoneda (importe, mO, mD) {

importe=document.getElementById("monedaO").value

var resultado=0
var cuenta=document.getElementById('selMonedaO').value + document.getElementById('selMonedaD').value
var dec=0

if (mO==mD) {
resultado=0
}

switch (cuenta) {
            case "54":
                resultado=importe*10000
		dec=2
                break;
            case "53":
                resultado=importe*10000000
		dec=2
                break;
            case "52":
                resultado=importe*100000000000
		dec=2
                break;
            case "51":
                resultado=importe*10000000000000
		dec=2
                break;
            case "45":
                resultado=importe/10000
		dec=6
                break;
            case "43":
                resultado=importe*1000
		dec=2
                break;
            case "42":
                resultado=importe*10000000
		dec=2
                break;
            case "41":
                resultado=importe*1000000000
		dec=2
                break;
            case "34":
                resultado=importe/1000
		dec=3
                break;
            case "35":
                resultado=importe/10000000
		dec=9
                break;
            case "32":
                resultado=importe*10000
		dec=2
                break;
            case "31":
                resultado=importe*1000000
		dec=2
                break;
            case "23":
                resultado=importe/10000
		dec=4
                break;
            case "24":
                resultado=importe/10000000
		dec=7
                break;
            case "25":
                resultado=importe/100000000000
		dec=11
                break;
            case "21":
                resultado=importe*100
		dec=2
                break;
            case "12":
                resultado=importe/100
		dec=2
                break;
            case "13":
                resultado=importe/100000
		dec=4
                break;
            case "14":
                resultado=importe/1000000000
		dec=9
                break;
            case "15":
                resultado=importe/10000000000000
		dec=13
                break;

            default:
                break;

        }


document.getElementById("monedaD").value= resultado.toFixed(dec)

return resultado

}

//ACTUALIZAR REMU

function agregarRemu() {
var tableRef = document.getElementById('tablaAct').getElementsByTagName('tbody')[0];

//document.getElementById('totSICA').rows[document.getElementById('tipo').selectedIndex+1].hidden=false

nPerFad=nPerTotal.indexOf(document.getElementById('fad').value.substring(0,4)+document.getElementById('fad').value.substring(5,7)+'01')
nPeriodo=nPerTotal.indexOf(document.getElementById('per').value.substring(0,4)+document.getElementById('per').value.substring(5,7)+'01')
importe=document.getElementById('imp').value


// Agrego una fila
var newRow = tableRef.insertRow();

// Insert a cell in the row at index 0
var newCell1 = newRow.insertCell(0);
var newCell2 = newRow.insertCell(1);
var newCell3 = newRow.insertCell(2);
var newCell4 = newRow.insertCell(3);

// Append a text node to the cell
var newText1 = document.createTextNode(document.getElementById("per").value);
newCell1.appendChild(newText1);

var newText2 = document.createTextNode(Number(document.getElementById("imp").value).toFixed(2));
newCell2.appendChild(newText2);

if (importe * coefActualiz[nPerFad] / coefActualiz[nPeriodo] > TopesRemu[nPerFad]) {
var newText3 = document.createTextNode(TopesRemu[nPerFad])
} else {

var newText3 = document.createTextNode((importe * coefActualiz[nPerFad] / coefActualiz[nPeriodo]).toFixed(2));

}

newCell3.appendChild(newText3);
var newText4 = document.createTextNode(coefActualiz[nPeriodo]);
newCell4.appendChild(newText4);

newCell2.setAttribute("style","text-align:right");
newCell3.setAttribute("style","text-align:right");
newCell4.setAttribute("align","center");

cantFilas=tablaAct.rows.length
totalA=totalA+Number(tablaAct.rows[cantFilas-2].cells[2].textContent)
totalO=totalO+Number(importe)

counter=counter+1

tablaAct.rows[cantFilas-1].cells[1].textContent=Number(totalO).toFixed(2);
tablaAct.rows[cantFilas-1].cells[2].textContent=Number(totalA).toFixed(2);

tablaAct.rows[cantFilas-1].cells[1].setAttribute("style","text-align:right")
tablaAct.rows[cantFilas-1].cells[2].setAttribute("style","text-align:right")

totAct.rows[1].cells[0].textContent=counter;
totAct.rows[1].cells[1].textContent= textContent=Number(totalA).toFixed(2);
totAct.rows[1].cells[2].textContent=(textContent=Number(totalA)/counter).toFixed(2);

totAct.rows[1].cells[0].setAttribute("style","text-align:center")
totAct.rows[1].cells[1].setAttribute("style","text-align:right")
totAct.rows[1].cells[2].setAttribute("style","text-align:right")

mes=document.getElementById('per').value.substring(5,7)
año=document.getElementById('per').value.substring(0,4)

if (mes=='12') {
document.getElementById('per').value=Number(año)+1+'-01-01'
} else {
	if (Number(mes)<9) {
	document.getElementById('per').value=año+'-'+'0'+(Number(mes)+1)+'-01'
	} else {
	document.getElementById('per').value=año+'-'+(Number(mes)+1)+'-01'
	}
}

document.getElementById('imp').value=''
document.getElementById('imp').focus()
}


function liquidarTablaRetro(mes, año, mHasta, aHasta, monto, montoA) {
    // window.open("tabla.html")
    // window.location.href='tabla.html'
    var fechaDesde = año + mes + "01"
    var fechaHasta = aHasta + mHasta + "01"
    var nro = nPer.indexOf(fechaDesde)
    var nFin = nPer.indexOf(fechaHasta)
    var cantFilas = nFin - nro + 3
    var importe = parseFloat(monto.replace(",", "."))
    var importeA = parseFloat(montoA.replace(",", "."))
    var dif = 0
    // let liq = Array()

    // Obtenemos la referencia del elemento body
    var body = document.getElementById("Ajustes");
    // Creamos un elemento <table> y un elemento <tbody>
    var tabla = document.createElement("table");
    var tblBody = document.createElement("tbody");



    // Creamos las celdas
    for (var i = 0; i < cantFilas; i++) {
        // Creamos las hileras de la tabla
        var fila = document.createElement("tr");
        for (var j = 0; j < 4; j++) {
            // Crea un elemento <td> y un nodo de texto, hace que el nodo de
            // texto sea el contenido de <td>, ubica el elemento <td> al final
            // de la hilera de la tabla
            var celda = document.createElement("td");
            var textoCelda = document.createTextNode(i + " - " + j);
            celda.appendChild(textoCelda);
            fila.appendChild(celda);
        }
        // agregamos la hilera al final de la tabla (al final del elemento tblbody)
        tblBody.appendChild(fila);
    }
    // posicionamos el <tbody> debajo del elemento <table>
    tabla.appendChild(tblBody);
    // appends <table> into <body>
    body.appendChild(tabla);
    // modifica el atributo "border" de la tabla y lo fija a "2";
    tabla.setAttribute("border", 2);
    tabla.setAttribute("id", "tabla");
    // tabla.setAttribute("text-align:right");

    var result = document.getElementById("resultado");
    // result.appendChild(tabla);

    // pongo los títulos
    var cuenta = 0
    document.getElementById("tabla").rows[cuenta].cells[1].textContent = "Importe Original";
    document.getElementById("tabla").rows[cuenta].cells[2].textContent = "Nuevo Importe";
    document.getElementById("tabla").rows[cuenta].cells[3].textContent = "Diferencia";
    document.getElementById("tabla").rows[cuenta].cells[0].textContent = "Período";
    cuenta = cuenta + 1

    var totimp = 0
    var totimpA = 0
    var totDif = 0

    if (nro < nFin) {
        // nro=nro+1;
        do {
	    if (cuenta>1) {

            importe = importe * coeficienteMovilidad[nro];
            importeA = importeA * coeficienteMovilidad[nro];
		}		
            dif = importeA - importe
            if (nro == 194) {
                importe = importe + 1500;
                importeA = importeA + 1500;
            }
            document.getElementById("tabla").rows[cuenta].cells[1].textContent = importe.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[2].textContent = importeA.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[3].textContent = dif.toFixed(2).replace(".", ",");
            document.getElementById("tabla").rows[cuenta].cells[0].textContent = nPer[nro].substring(4, 6) + "-" + nPer[nro].substring(0, 4);

            var totimp = totimp + importe
            var totimpA = totimpA + importeA
            var totDif = totDif + dif

            liq.push(importe.toFixed(2));
            nro = nro + 1;
            cuenta = cuenta + 1;
        }
        while (nro < nFin + 1);
    }
    // ESCRIBO LOS TOTALES
    document.getElementById("tabla").rows[cuenta].cells[1].textContent = totimp.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[2].textContent = totimpA.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[3].textContent = totDif.toFixed(2).replace(".", ",");;
    document.getElementById("tabla").rows[cuenta].cells[0].textContent = "TOTALES";
    // window.scroll(0, 150)
    console.log(liq);
    // window.open("tabla.html")
    // loadLiquidación();
}


